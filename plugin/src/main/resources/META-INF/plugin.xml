<!--
  ~ Copyright 2013 Consulo.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<consulo-plugin url="https://github.com/consulo/consulo-java">
	<id>consulo.java</id>
	<name>Java</name>
	<version>SNAPHOT</version>
	<category>Custom Languages</category>
	<vendor>Jetbrains and others</vendor>
	<depends optional="true" config-file="com.intellij.regexp.xml">com.intellij.regexp</depends>
	<depends optional="true" config-file="com.intellij.images.xml">com.intellij.images</depends>
	<depends optional="true" config-file="Spellchecker.xml">com.intellij.spellchecker</depends>
	<depends optional="true" config-file="Properties.xml">com.intellij.properties</depends>
	<depends optional="true" config-file="consulo.javascript.xml">consulo.javascript</depends>
	<depends>com.intellij.xml</depends>
	<resource-bundle>messages.JavaBundle</resource-bundle>

	<tags>
		<tag>custom.language</tag>
		<tag>software.framework</tag>
	</tags>

	<permissions>
		<permission type="SOCKET_BIND"/>
		<permission type="SOCKET_CONNECT"/>
		<permission type="GET_ENV"/>
		<permission type="PROCESS_CREATE"/>
	</permissions>

	<import path="/META-INF/JvmByteCodeViewer.xml"/>
	<import path="/META-INF/Coverage.xml"/>
	<import path="/META-INF/InspectionGadgets.xml"/>
	<import path="/META-INF/IntentionPowerPack.xml"/>
	<import path="/META-INF/Manifest.xml"/>
	<import path="/META-INF/Guava.xml"/>
	<import path="/META-INF/Jam.xml"/>
	<import path="/META-INF/Injecting.xml"/>

	<actions>
		<group id="NewJavaSpecialFile">
			<action id="NewPackageInfo" class="com.intellij.java.impl.ide.actions.CreatePackageInfoAction" require-module-extensions="java"/>
			<action id="NewModuleInfo" class="com.intellij.java.impl.ide.actions.CreateModuleInfoAction" require-module-extensions="java"/>
			<add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
		</group>

		<group id="JavaGenerateGroup1">
			<action id="GenerateTestMethod" class="com.intellij.java.impl.testIntegration.GenerateTestMethodAction"/>
			<action id="GenerateSetUpMethod" class="com.intellij.java.impl.testIntegration.GenerateSetUpMethodAction"/>
			<action id="GenerateTearDownMethod" class="com.intellij.java.impl.testIntegration.GenerateTearDownMethodAction"/>
			<action id="GenerateDataMethod" class="com.intellij.java.impl.testIntegration.GenerateDataMethodAction"/>
			<separator/>
			<action id="GenerateConstructor" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateConstructorAction"/>
			<action id="GenerateGetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateGetterAction"/>
			<action id="GenerateSetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateSetterAction"/>
			<action id="GenerateGetterAndSetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateGetterAndSetterAction"/>
			<action id="GenerateEquals" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateEqualsAction"/>
			<action id="Actions.ActionsPlugin.GenerateToString" class="com.intellij.java.impl.generate.GenerateToStringAction" text="to_String()" description="Generate toString() method"/>
			<action id="GenerateCreateUI" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateCreateUIAction"/>
			<add-to-group group-id="GenerateGroup" anchor="first"/>
		</group>

		<group id="JavaGenerateGroup2">
			<action id="GenerateSuperMethodCall" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateSuperMethodCallAction"/>
			<add-to-group group-id="GenerateGroup" anchor="last"/>
		</group>

		<action id="JavaNewClass" class="com.intellij.java.impl.ide.actions.CreateClassAction">
			<add-to-group group-id="NewGroup1" anchor="first"/>
		</action>

		<action id="InferNullity" class="com.intellij.java.impl.codeInspection.inferNullity.InferNullityAnnotationsAction">
			<add-to-group group-id="InspectCodeGroup" anchor="after" relative-to-action="RunInspection"/>
		</action>

		<group id="AnalyzeJavaMenu">
			<action id="ShowPackageCycles" class="com.intellij.java.impl.cyclicDependencies.actions.CyclicDependenciesAction"/>
			<separator/>
			<action id="SliceBackward" class="com.intellij.java.impl.slicer.SliceBackwardAction"/>
			<action id="SliceForward" class="com.intellij.java.impl.slicer.SliceForwardAction"/>
			<add-to-group group-id="AnalyzeMenu" anchor="last"/>
		</group>

		<group id="RefactoringMenu1">
			<action id="ChangeTypeSignature"
					class="com.intellij.java.impl.refactoring.typeMigration.actions.ChangeTypeSignatureAction"
					text="T_ype Migration..."
					description="Change type of the return type of the method, field, parameter, variable or class type arguments and correct all references"/>
			<action id="MakeStatic" class="com.intellij.java.impl.refactoring.actions.MakeStaticAction"/>
			<action id="ConvertToInstanceMethod" class="com.intellij.java.impl.refactoring.actions.ConvertToInstanceMethodAction"/>
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="ChangeSignature"/>
		</group>

		<group id="RefactoringMenu2">
			<action id="MethodDuplicates" class="com.intellij.java.impl.refactoring.actions.MethodDuplicatesAction"/>

			<action id="InvertBoolean" class="com.intellij.java.impl.refactoring.actions.InvertBooleanAction"/>
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="Inline"/>
		</group>

		<action id="ReplaceMethodWithMethodObject" class="com.intellij.java.impl.refactoring.actions.ReplaceMethodWithMethodObjectAction">
			<add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
		</action>

		<action id="IntroduceParameterObject" class="com.intellij.java.impl.refactoring.actions.IntroduceParameterObjectAction">
			<add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="IntroduceParameter"/>
		</action>

		<action id="RenameFile" class="com.intellij.java.impl.refactoring.actions.RenameFileAction">
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="RenameElement"/>
			<add-to-group group-id="EditorTabPopupMenuEx" anchor="after" relative-to-action="AddAllToFavorites"/>
		</action>

		<group id="RefactoringMenu4" require-module-extensions="java" can-use-project-as-default="true">
			<action id="TurnRefsToSuper" class="com.intellij.java.impl.refactoring.actions.TurnRefsToSuperAction"/>
			<action id="InheritanceToDelegation" class="com.intellij.java.impl.refactoring.actions.InheritanceToDelegationAction"/>
			<action id="RemoveMiddleman" class="com.intellij.java.impl.refactoring.actions.RemoveMiddlemanAction"/>
			<action id="WrapReturnValue" class="com.intellij.java.impl.refactoring.wrapreturnvalue.WrapReturnValueAction"/>
			<separator/>
			<action id="AnonymousToInner" class="com.intellij.java.impl.refactoring.actions.AnonymousToInnerAction"/>
			<action id="EncapsulateFields" class="com.intellij.java.impl.refactoring.actions.EncapsulateFieldsAction"/>
			<action id="ReplaceTempWithQuery" class="com.intellij.java.impl.refactoring.actions.TempWithQueryAction"/>
			<action id="ReplaceConstructorWithFactory" class="com.intellij.java.impl.refactoring.actions.ReplaceConstructorWithFactoryAction"/>
			<action id="ReplaceConstructorWithBuilder" class="com.intellij.java.impl.refactoring.actions.ReplaceConstructorWithBuilderAction"/>
			<separator/>
			<action id="Generify" class="com.intellij.java.impl.refactoring.actions.TypeCookAction"/>
			<action id="Migrate" class="com.intellij.java.impl.refactoring.actions.MigrateAction"/>
			<separator/>

			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="MemberPushDown"/>
		</group>

		<action id="Hotswap" class="com.intellij.java.debugger.impl.actions.HotSwapAction">
			<add-to-group group-id="DebugMainMenu" anchor="before" relative-to-action="StepOver"/>
		</action>

		<action id="Debugger.PopFrame" class="com.intellij.java.debugger.impl.actions.PopFrameAction" icon="consulo.platform.base.PlatformIconGroup@actions.popframe">
			<add-to-group group-id="DebugMainMenu" anchor="after" relative-to-action="ForceRunToCursor"/>
		</action>

		<group id="ToggleBreakpointAction">
			<action id="ToggleMethodBreakpoint" class="com.intellij.java.debugger.impl.actions.ToggleMethodBreakpointAction"/>
			<action id="ToggleFieldBreakpoint" class="com.intellij.java.debugger.impl.actions.ToggleFieldBreakpointAction"/>
			<!--Moved to XDebugger <action id="ToggleBreakpointEnabled" class="com.intellij.debugger.actions.ToggleBreakpointEnabledAction"/>-->
			<add-to-group group-id="DebugMainMenu" anchor="after" relative-to-action="ToggleLineBreakpoint"/>
		</group>

		<action id="ExportThreads" class="com.intellij.java.debugger.impl.actions.ExportThreadsAction" icon="consulo.platform.base.PlatformIconGroup@actions.export">
			<add-to-group group-id="RunMenu" anchor="last"/>
		</action>
		<action id="DumpThreads" class="com.intellij.java.debugger.impl.actions.ThreadDumpAction" text="Take a thread dump" icon="consulo.platform.base.PlatformIconGroup@actions.dump">
			<add-to-group group-id="RunMenu" anchor="last"/>
		</action>

		<action id="GenerateJavadoc" class="com.intellij.java.impl.javadoc.actions.GenerateJavadocAction" can-use-project-as-default="true" require-module-extensions="java">
			<add-to-group group-id="ToolsBasicGroup" anchor="after" relative-to-action="SaveFileAsTemplate"/>
		</action>

		<!--<action id="DebugListen" internal="true" class="com.intellij.debugger.actions.ThrowDebugExceptionAction">
		  <add-to-group group-id="Internal.Errors"/>
		</action> -->

		<action id="GenerateVisitorByHierarchy" internal="true" class="com.intellij.java.impl.internal.GenerateVisitorByHierarchyAction"
				text="Generate Hierarchy Visitor">
			<add-to-group group-id="Internal"/>
		</action>

		<action id="UsedIconsListing" internal="true" class="com.intellij.java.impl.internal.UsedIconsListingAction"
				text="List Used Icons">
			<add-to-group group-id="Internal"/>
		</action>

		<action id="StaticIconFields" internal="true" class="com.intellij.java.impl.internal.StaticIconFieldsAction"
				text="List Static Field Initializers">
			<add-to-group group-id="Internal"/>
		</action>

		<group id="JavaDebuggerActions">
			<action id="Debugger.CustomizeContextView" class="com.intellij.java.debugger.impl.actions.CustomizeContextViewAction">
				<add-to-group group-id="XDebugger.Variables.Tree.Popup" anchor="last"/>
				<add-to-group group-id="XDebugger.Watches.Tree.Popup" anchor="last"/>
			</action>
			<action id="Debugger.CustomizeThreadsView" class="com.intellij.java.debugger.impl.actions.CustomizeThreadsViewAction">
				<add-to-group group-id="XDebugger.Frames.Tree.Popup" anchor="last"/>
			</action>
			<action id="Debugger.EditFrameSource" class="com.intellij.java.debugger.impl.actions.EditFrameSourceAction"/>
			<action id="Debugger.EditNodeSource" class="com.intellij.java.debugger.impl.actions.EditSourceAction"/>
			<action id="Debugger.EditTypeSource" class="com.intellij.java.debugger.impl.actions.JumpToObjectAction"/>
			<reference ref="Debugger.PopFrame"/>
			<action id="Debugger.ViewAsGroup" class="com.intellij.java.debugger.impl.actions.ViewAsGroup">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>
			<action id="Debugger.AdjustArrayRange" class="com.intellij.java.debugger.impl.actions.ArrayAction$AdjustArrayRangeAction">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>
			<!--<action id="Debugger.SetValue" class="com.intellij.debugger.actions.SetValueAction"/>-->
			<!--<action id="Debugger.ShowAsHex" class="com.intellij.debugger.actions.ShowAsHexAction" text="Show as Hex"/>-->
			<action id="Debugger.ResumeThread" class="com.intellij.java.debugger.impl.actions.ResumeThreadAction"/>
			<action id="Debugger.FreezeThread" class="com.intellij.java.debugger.impl.actions.FreezeThreadAction"/>
			<action id="Debugger.InterruptThread" class="com.intellij.java.debugger.impl.actions.InterruptThreadAction"/>
			<action id="Debugger.CreateRenderer" class="com.intellij.java.debugger.impl.actions.CreateRendererAction" text="Create..."/>
			<action id="Debugger.AutoRenderer" class="com.intellij.java.debugger.impl.actions.AutoRendererAction"/>
			<action id="Debugger.MuteRenderers" class="com.intellij.java.debugger.impl.ui.tree.actions.ForceOnDemandRenderersAction" text="Mute Renderers">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>

			<add-to-group group-id="DebuggerActions" anchor="first"/>
		</group>

		<group id="Debugger.Representation">
			<reference ref="Debugger.CreateRenderer"/>
			<separator/>
			<reference ref="Debugger.AutoRenderer"/>
		</group>

		<group id="EditorPopupMenuDebugJava">
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<add-to-group group-id="EditorPopupMenuDebug" anchor="last"/>
		</group>

		<group id="JavaCompileGroup">
			<reference ref="ToggleMethodBreakpoint"/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<add-to-group group-id="ProjectViewCompileGroup" anchor="first"/>
			<add-to-group group-id="StructureViewCompileGroup" anchor="first"/>
		</group>

		<action id="TypeHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.type.TypeHierarchyBrowser$BaseOnThisTypeAction">
			<add-to-group group-id="TypeHierarchyPopupMenu" anchor="first"/>
		</action>

		<group id="JavaMethodHierarchyPopupMenu">
			<action id="MethodHierarchy.ImplementMethodAction" class="com.intellij.java.impl.ide.hierarchy.method.ImplementMethodAction"
					use-shortcut-of="ImplementMethods"/>
			<action id="MethodHierarchy.OverrideMethodAction" class="com.intellij.java.impl.ide.hierarchy.method.OverrideMethodAction"
					use-shortcut-of="OverrideMethods"/>
			<separator/>
			<add-to-group group-id="MethodHierarchyPopupMenu" anchor="first"/>
		</group>

		<action id="MethodHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.method.MethodHierarchyBrowser$BaseOnThisMethodAction">
			<add-to-group group-id="MethodHierarchyPopupMenu" anchor="first"/>
		</action>

		<action id="CallHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.call.CallHierarchyBrowser$BaseOnThisMethodAction">
			<add-to-group group-id="CallHierarchyPopupMenu" anchor="first"/>
		</action>


		<group id="MemoryView.SettingsPopupActionGroup">
			<action class="com.intellij.java.debugger.impl.memory.action.ShowClassesWithInstanceAction"
					id="MemoryView.ShowOnlyWithInstances"
					text="Show With Instances Only"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowClassesWithDiffAction"
					id="MemoryView.ShowOnlyWithDiff"
					text="Show Non-Zero Diff Only"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowTrackedAction"
					id="MemoryView.ShowOnlyTracked"
					text="Show Tracked Classes Only"/>

			<separator/>

			<action class="com.intellij.java.debugger.impl.memory.action.EnableBackgroundTrackingAction"
					id="MemoryView.EnableTrackingWithClosedWindow"
					text="Enable Tracking With Hidden Memory View"/>
		</group>

		<group id="MemoryView.ClassesPopupActionGroup">
			<action class="com.intellij.java.debugger.impl.memory.action.ShowInstancesFromClassesViewAction"
					id="MemoryView.ShowInstances"
					text="Show Instances"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowNewInstancesAction"
					id="MemoryView.ShowNewInstances"
					text="Show New Instances"/>

			<action class="com.intellij.java.debugger.impl.memory.action.JumpToTypeSourceAction"
					id="MemoryView.JumpToTypeSource"
					text="Jump To Type Source"/>
			<separator/>

			<action class="com.intellij.java.debugger.impl.memory.action.tracking.TrackInstancesToggleAction"
					id="MemoryView.TrackingAction.NewInstancesTracking"
					text="Track New Instances"/>
		</group>

		<action class="com.intellij.java.debugger.impl.memory.action.ShowInstancesByClassAction"
				id="MemoryView.ShowInstancesFromDebuggerTree"
				text="Show Instances">
			<add-to-group group-id="XDebugger.ValueGroup" anchor="after"
						  relative-to-action="Debugger.ShowReferring"/>
		</action>

		<action class="com.intellij.java.debugger.impl.memory.action.tracking.JumpToAllocationSourceAction"
				id="MemoryView.ShowAllocationStackTrace"
				text="Jump To Allocation Position">
			<add-to-group group-id="XDebugger.ValueGroup" anchor="after"
						  relative-to-action="XDebugger.JumpToTypeSource"/>
		</action>

		<group id="Debugger.FramePanelPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.EvaluationDialogPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/> -->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.InspectPanelPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.ThreadsPanelPopup">
			<!--<reference ref="Debugger.ResumeThread"/>-->
			<!--<reference ref="Debugger.FreezeThread"/>-->
			<reference ref="Debugger.InterruptThread"/>
			<!--<reference ref="Debugger.ShowFrame"/>-->
			<reference ref="Debugger.PopFrame"/>
			<!--<reference ref="Debugger.EditFrameSource"/>-->
			<!--<reference ref="Debugger.EditTypeSource"/>-->
			<!--<reference ref="EditSource"/>-->
			<separator/>
			<reference ref="ExportThreads"/>
			<separator/>
			<reference ref="Debugger.CustomizeThreadsView"/>
		</group>

		<group id="Debugger.WatchesPanelPopup">
			<!--<reference ref="Debugger.NewWatch"/>-->
			<!--<reference ref="Debugger.EditWatch"/>-->
			<!--<reference ref="Debugger.RemoveWatch"/>-->
			<!--<reference ref="Debugger.RemoveAllWatches"/>-->
			<separator/>
			<reference ref="Debugger.AdjustArrayRange"/>
			<!--<reference ref="Debugger.Inspect"/>-->
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/>-->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/>-->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>
	</actions>

	<extensions defaultExtensionNs="com.intellij">

		<globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
						  groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationInspection"
						  presentation="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationPresentation"/>
		<specialTool shortName="UnusedLibrary" bundle="messages.InspectionsBundle" key="unused.library.display.name"
					 groupPath="Java" groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
					 implementationClass="com.intellij.java.impl.codeInspection.unusedLibraries.UnusedLibrariesInspection"/>
		<specialTool shortName="InconsistentLanguageLevel" displayName="Inconsistent language level settings"
					 groupPath="Java" groupName="Modularization issues" enabledByDefault="false" level="WARNING"
					 implementationClass="com.intellij.java.impl.codeInspection.inconsistentLanguageLevel.InconsistentLanguageLevelInspection"/>
		<globalInspection shortName="WeakerAccess" displayName="Declaration access can be weaker" groupName="Declaration redundancy"
						  groupPath="Java" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.visibility.VisibilityInspection"/>
		<globalInspection shortName="CanBeFinal" displayName="Declaration can have final modifier" groupPath="Java" groupName="Declaration redundancy"
						  enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.canBeFinal.CanBeFinalInspection"/>
		<globalInspection shortName="UnusedParameters" bundle="messages.InspectionsBundle" key="inspection.unused.parameter.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unusedParameters.UnusedParametersInspection"/>
		<globalInspection shortName="SameParameterValue" bundle="messages.InspectionsBundle" key="inspection.same.parameter.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.sameParameterValue.SameParameterValueInspection"/>
		<globalInspection shortName="UnusedReturnValue" bundle="messages.InspectionsBundle" key="inspection.unused.return.value.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unusedReturnValue.UnusedReturnValue"/>
		<globalInspection shortName="SameReturnValue" bundle="messages.InspectionsBundle" key="inspection.same.return.value.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.sameReturnValue.SameReturnValueInspection"/>
		<globalInspection shortName="EmptyMethod" groupPath="Java" displayName="Empty method" groupName="Declaration redundancy" enabledByDefault="true"
						  level="WARNING" implementationClass="com.intellij.java.impl.codeInspection.emptyMethod.EmptyMethodInspection"/>
		<globalInspection shortName="RedundantThrows" groupPath="Java" displayName="Redundant throws clause" groupName="Declaration redundancy"
						  enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unneededThrows.RedundantThrows"/>
		<localInspection language="JAVA" groupPath="Java" shortName="ConstantConditions" bundle="messages.InspectionsBundle"
						 key="inspection.data.flow.display.name"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.dataFlow.DataFlowInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="UnusedAssignment" displayName="Unused assignment" groupName="Probable bugs"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.impl.codeInspection.defUse.DefUseInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NumericOverflow" displayName="Numeric overflow" groupName="Numeric issues"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.analysis.impl.codeInspection.NumericOverflowInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantCast" displayName="Redundant type cast"
						 groupName="Verbose or redundant code constructs"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.redundantCast.RedundantCastInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantTypeArguments" bundle="messages.InspectionsBundle"
						 key="inspection.redundant.type.display.name"
						 groupName="Verbose or redundant code constructs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.miscGenerics.RedundantTypeArgsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantArrayCreation" bundle="messages.InspectionsBundle"
						 key="inspection.redundant.array.creation.display.name" groupName="Verbose or redundant code constructs"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.miscGenerics.RedundantArrayForVarargsCallInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuspiciousMethodCalls" bundle="messages.InspectionsBundle"
						 key="inspection.suspicious.collections.method.calls.display.name" groupName="Probable bugs" enabledByDefault="true"
						 level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.miscGenerics.SuspiciousCollectionsMethodCallsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="LocalCanBeFinal" bundle="messages.InspectionsBundle"
						 key="inspection.local.can.be.final.display.name"
						 groupName="Code style issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.localCanBeFinal.LocalCanBeFinal"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavaDoc" bundle="messages.InspectionsBundle" key="inspection.javadoc.display.name"
						 groupKey="group.names.javadoc.issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.javaDoc.JavaDocLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavadocReference" bundle="messages.InspectionsBundle"
						 key="inspection.javadoc.ref.display.name"
						 groupKey="group.names.javadoc.issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.javaDoc.JavaDocReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" suppressId="deprecation" shortName="Deprecation" displayName="Deprecated API usage" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.deprecation.DeprecationInspection"/>
		<localInspection language="XML" shortName="DeprecatedClassUsageInspection" displayName="Deprecated API usage in XML" groupName="XML"
						 enabledByDefault="true" level="WARNING" implementationClass="com.intellij.java.impl.util.xml.DeprecatedClassUsageInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="EqualsAndHashcode" bundle="messages.InspectionsBundle"
						 key="inspection.equals.hashcode.display.name"
						 groupName="General" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.equalsAndHashcode.EqualsAndHashcode"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Since15" bundle="messages.InspectionsBundle" key="inspection.1.5.display.name"
						 groupName="Language level migration aids" enabledByDefault="false" level="ERROR"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.java15api.Java15APIUsageInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Dependency" displayName="Illegal package dependencies" groupName="General" enabledByDefault="true"
						 level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.dependencyViolation.DependencyInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="FieldCanBeLocal" bundle="messages.InspectionsBundle"
						 key="inspection.field.can.be.local.display.name"
						 groupName="Class structure" enabledByDefault="true" level="WARNING" runForWholeFile="true"
						 implementationClass="com.intellij.java.impl.codeInspection.varScopeCanBeNarrowed.FieldCanBeLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="ParameterCanBeLocal" key="inspection.parameter.can.be.local.display.name"
						 groupName="Class structure" enabledByDefault="true" level="WARNING" bundle="messages.InspectionsBundle"
						 implementationClass="com.intellij.java.impl.codeInspection.varScopeCanBeNarrowed.ParameterCanBeLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NullableProblems" bundle="messages.InspectionsBundle"
						 key="inspection.nullable.problems.display.name"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.nullable.NullableStuffInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="TestOnlyProblems" bundle="messages.InspectionsBundle"
						 key="inspection.test.only.problems.display.name"
						 groupName="General" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.testOnly.TestOnlyInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="WrongPackageStatement" bundle="messages.InspectionsBundle" key="wrong.package.statement"
						 groupName="General"
						 enabledByDefault="true" level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.wrongPackageStatement.WrongPackageStatementInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SillyAssignment" bundle="messages.InspectionsBundle"
						 key="inspection.variable.assigned.to.itself.display.name" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.sillyAssignment.SillyAssignmentInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantThrowsDeclaration" bundle="messages.InspectionsBundle"
						 key="redundant.throws.declaration"
						 groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.unneededThrows.RedundantThrowsDeclaration"/>
		<localInspection language="JAVA" groupPath="Java" shortName="AccessStaticViaInstance" bundle="messages.InspectionsBundle"
						 key="access.static.via.instance" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.accessStaticViaInstance.AccessStaticViaInstance"/>
		<localInspection shortName="DefaultFileTemplate" bundle="messages.InspectionsBundle" key="default.file.template.display.name"
						 groupName="General" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.defaultFileTemplateUsage.DefaultFileTemplateUsageInspection"/>
		<globalInspection shortName="UnnecessaryModuleDependencyInspection" bundle="messages.InspectionsBundle"
						  key="unnecessary.module.dependency.display.name" groupName="Declaration redundancy" enabledByDefault="true"
						  level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unnecessaryModuleDependency.UnnecessaryModuleDependencyInspection"/>
		<globalInspection shortName="RedundantSuppression" bundle="messages.InspectionsBundle" key="inspection.redundant.suppression.name"
						  groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.RedundantSuppressInspection"/>

		<globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
						  groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationInspection"
						  presentation="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationPresentation"/>

		<localInspection language="JAVA" groupPath="Java" shortName="UNUSED_IMPORT" displayName="Unused import (editor light)" groupName="Imports"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.analysis.impl.codeInspection.unusedImport.UnusedImportLocalInspection"
						 unfair="true"/>

		<localInspection language="JAVA" groupPath="Java" suppressId="unchecked" shortName="UNCHECKED_WARNING" displayName="Unchecked warning" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.uncheckedWarnings.UncheckedWarningLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuspiciousNameCombination" bundle="messages.InspectionsBundle"
						 key="suspicious.name.combination.display.name" groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.suspiciousNameCombination.SuspiciousNameCombinationInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="DuplicateThrows" bundle="messages.InspectionsBundle"
						 key="inspection.duplicate.throws.display.name"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.duplicateThrows.DuplicateThrowsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="FieldAccessNotGuarded" displayName="Unguarded field access"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.FieldAccessNotGuardedInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="InstanceGuardedByStatic" displayName="Instance member guarded by static field"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.InstanceGuardedByStaticInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NonFinalFieldInImmutable" displayName="Non-final field in @Immutable class"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.NonFinalFieldInImmutableInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NonFinalGuard" displayName="Non-final @GuardedBy field"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.NonFinalGuardInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="StaticGuardedByInstance" displayName="Static member guarded by instance field or this"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.StaticGuardedByInstanceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="UnknownGuard" displayName="Unknown @GuardedBy field"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.UnknownGuardInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2Diamond" displayName="Explicit type can be replaced with &lt;&gt;"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.ExplicitTypeCanBeDiamondInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2Lambda" displayName="Anonymous type can be replaced with lambda"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.AnonymousCanBeLambdaInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Anonymous2MethodRef" displayName="Anonymous type can be replaced with method reference"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.AnonymousCanBeMethodReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2MethodRef" displayName="Lambda can be replaced with method reference"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.LambdaCanBeMethodReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="CodeBlock2Expr" displayName="Lambda code block can be replaced with expression"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.RedundantLambdaCodeBlockInspection"/>
		<localInspection language="JAVA" groupPath="Java" suppressId="unchecked" shortName="SafeVarargsDetector"
						 displayName="Possible heap pollution from parameterized vararg type" groupName="Language level migration aids"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.PossibleHeapPollutionVarargsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavacQuirks" bundle="messages.InspectionsBundle" key="inspection.compiler.javac.quirks.name"
						 groupName="Compiler issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.compiler.JavacQuirksInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="MagicConstant" displayName="Magic Constant"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.magicConstant.MagicConstantInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuperClassHasFrequentlyUsedInheritors"
						 groupBundle="messages.InspectionsBundle"
						 groupKey="group.names.inheritance.issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.inheritance.SuperClassHasFrequentlyUsedInheritorsInspection"
						 displayName="Class may extend a commonly used base class instead of implementing interface"/>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.quickFix.RedundantLambdaParameterTypeIntention</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SplitIfAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.InvertIfConditionAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ExtractIfConditionAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.RemoveRedundantElseAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddNotNullAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddDeprecationAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddNullableAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.IterateOverIterableIntention</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.DeannotateIntentionAction</className>
			<category>Control Flow</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CreateFieldFromParameterAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AssignFieldFromParameterAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.BindFieldsFromParametersAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.CreateLocalVarFromInstanceofAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.CreateCastExpressionFromInstanceofAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.testIntegration.createTest.CreateTestAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CreateSubclassAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ImplementAbstractMethodAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CopyAbstractMethodImplementationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SplitDeclarationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.PushConditionInCallAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MoveInitializerToConstructorAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.testIntegration.intention.MoveInitializerToSetUpMethodAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MoveFieldAssignmentToInitializerAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.AddRuntimeExceptionToThrowsAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MakeTypeGenericAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddOverrideAnnotationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.DelegateWithDefaultParamValueIntentionAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.IntroduceVariableIntentionAction</className>
			<category>Refactorings</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.EncapsulateFieldAction</className>
			<category>Refactorings</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SimplifyBooleanExpressionAction</className>
			<category>Boolean</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConcatenationToMessageFormatAction</className>
			<category>I18N</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertToBasicLatinAction</className>
			<category>I18N</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddOnDemandStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddSingleMemberStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ExpandStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInspection.actions.UnimplementInterfaceAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInspection.actions.ReplaceImplementsWithStaticImportAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertColorRepresentationIntentionAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ReplaceCastWithVariableAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.BreakStringOnLineBreaksIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.RemoveLiteralUnderscoresAction</className>
			<category>Numbers</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.InsertLiteralUnderscoresAction</className>
			<category>Numbers</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
			<category>Strings</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SurroundAutoCloseableAction</className>
			<category>Declaration</category>
		</intentionAction>




		<patterns.patternClass className="com.intellij.java.language.patterns.PsiJavaPatterns" alias="java"/>


		<printOption implementation="com.intellij.java.impl.codeEditor.printing.HyperlinksToClassesOption"/>


		<referenceProviderType key="Class Reference Provider"
							   implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.providers.JavaClassReferenceProvider"/>




		<pathMacroExpendableProtocol protocol="jar"/>


	</extensions>

</consulo-plugin>