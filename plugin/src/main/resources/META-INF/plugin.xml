<!--
  ~ Copyright 2013 Consulo.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<consulo-plugin url="https://github.com/consulo/consulo-java">
	<id>consulo.java</id>
	<name>Java</name>
	<version>SNAPHOT</version>
	<category>Custom Languages</category>
	<vendor>Jetbrains and others</vendor>
	<depends optional="true" config-file="com.intellij.regexp.xml">com.intellij.regexp</depends>
	<depends optional="true" config-file="com.intellij.images.xml">com.intellij.images</depends>
	<depends optional="true" config-file="Spellchecker.xml">com.intellij.spellchecker</depends>
	<depends optional="true" config-file="Properties.xml">com.intellij.properties</depends>
	<depends optional="true" config-file="consulo.javascript.xml">consulo.javascript</depends>
	<depends>com.intellij.xml</depends>
	<resource-bundle>messages.JavaBundle</resource-bundle>

	<tags>
		<tag>custom.language</tag>
		<tag>software.framework</tag>
	</tags>

	<permissions>
		<permission type="SOCKET_BIND"/>
		<permission type="SOCKET_CONNECT"/>
		<permission type="GET_ENV"/>
		<permission type="PROCESS_CREATE"/>
	</permissions>

	<import path="/META-INF/JvmByteCodeViewer.xml"/>
	<import path="/META-INF/Coverage.xml"/>
	<import path="/META-INF/InspectionGadgets.xml"/>
	<import path="/META-INF/IntentionPowerPack.xml"/>
	<import path="/META-INF/Manifest.xml"/>
	<import path="/META-INF/Guava.xml"/>
	<import path="/META-INF/Jam.xml"/>
	<import path="/META-INF/Injecting.xml"/>

	<actions>
		<group id="NewJavaSpecialFile">
			<action id="NewPackageInfo" class="com.intellij.java.impl.ide.actions.CreatePackageInfoAction" require-module-extensions="java"/>
			<action id="NewModuleInfo" class="com.intellij.java.impl.ide.actions.CreateModuleInfoAction" require-module-extensions="java"/>
			<add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
		</group>

		<group id="JavaGenerateGroup1">
			<action id="GenerateTestMethod" class="com.intellij.java.impl.testIntegration.GenerateTestMethodAction"/>
			<action id="GenerateSetUpMethod" class="com.intellij.java.impl.testIntegration.GenerateSetUpMethodAction"/>
			<action id="GenerateTearDownMethod" class="com.intellij.java.impl.testIntegration.GenerateTearDownMethodAction"/>
			<action id="GenerateDataMethod" class="com.intellij.java.impl.testIntegration.GenerateDataMethodAction"/>
			<separator/>
			<action id="GenerateConstructor" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateConstructorAction"/>
			<action id="GenerateGetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateGetterAction"/>
			<action id="GenerateSetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateSetterAction"/>
			<action id="GenerateGetterAndSetter" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateGetterAndSetterAction"/>
			<action id="GenerateEquals" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateEqualsAction"/>
			<action id="Actions.ActionsPlugin.GenerateToString" class="com.intellij.java.impl.generate.GenerateToStringAction" text="to_String()" description="Generate toString() method"/>
			<action id="GenerateCreateUI" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateCreateUIAction"/>
			<add-to-group group-id="GenerateGroup" anchor="first"/>
		</group>

		<group id="JavaGenerateGroup2">
			<action id="GenerateSuperMethodCall" class="com.intellij.java.impl.codeInsight.generation.actions.GenerateSuperMethodCallAction"/>
			<add-to-group group-id="GenerateGroup" anchor="last"/>
		</group>

		<action id="JavaNewClass" class="com.intellij.java.impl.ide.actions.CreateClassAction">
			<add-to-group group-id="NewGroup1" anchor="first"/>
		</action>

		<action id="InferNullity" class="com.intellij.java.impl.codeInspection.inferNullity.InferNullityAnnotationsAction">
			<add-to-group group-id="InspectCodeGroup" anchor="after" relative-to-action="RunInspection"/>
		</action>

		<group id="AnalyzeJavaMenu">
			<action id="ShowPackageCycles" class="com.intellij.java.impl.cyclicDependencies.actions.CyclicDependenciesAction"/>
			<separator/>
			<action id="SliceBackward" class="com.intellij.java.impl.slicer.SliceBackwardAction"/>
			<action id="SliceForward" class="com.intellij.java.impl.slicer.SliceForwardAction"/>
			<add-to-group group-id="AnalyzeMenu" anchor="last"/>
		</group>

		<group id="RefactoringMenu1">
			<action id="ChangeTypeSignature"
					class="com.intellij.java.impl.refactoring.typeMigration.actions.ChangeTypeSignatureAction"
					text="T_ype Migration..."
					description="Change type of the return type of the method, field, parameter, variable or class type arguments and correct all references"/>
			<action id="MakeStatic" class="com.intellij.java.impl.refactoring.actions.MakeStaticAction"/>
			<action id="ConvertToInstanceMethod" class="com.intellij.java.impl.refactoring.actions.ConvertToInstanceMethodAction"/>
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="ChangeSignature"/>
		</group>

		<group id="RefactoringMenu2">
			<action id="MethodDuplicates" class="com.intellij.java.impl.refactoring.actions.MethodDuplicatesAction"/>

			<action id="InvertBoolean" class="com.intellij.java.impl.refactoring.actions.InvertBooleanAction"/>
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="Inline"/>
		</group>

		<action id="ReplaceMethodWithMethodObject" class="com.intellij.java.impl.refactoring.actions.ReplaceMethodWithMethodObjectAction">
			<add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="ExtractMethod"/>
		</action>

		<action id="IntroduceParameterObject" class="com.intellij.java.impl.refactoring.actions.IntroduceParameterObjectAction">
			<add-to-group group-id="IntroduceActionsGroup" anchor="after" relative-to-action="IntroduceParameter"/>
		</action>

		<action id="RenameFile" class="com.intellij.java.impl.refactoring.actions.RenameFileAction">
			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="RenameElement"/>
			<add-to-group group-id="EditorTabPopupMenuEx" anchor="after" relative-to-action="AddAllToFavorites"/>
		</action>

		<group id="RefactoringMenu4" require-module-extensions="java" can-use-project-as-default="true">
			<action id="TurnRefsToSuper" class="com.intellij.java.impl.refactoring.actions.TurnRefsToSuperAction"/>
			<action id="InheritanceToDelegation" class="com.intellij.java.impl.refactoring.actions.InheritanceToDelegationAction"/>
			<action id="RemoveMiddleman" class="com.intellij.java.impl.refactoring.actions.RemoveMiddlemanAction"/>
			<action id="WrapReturnValue" class="com.intellij.java.impl.refactoring.wrapreturnvalue.WrapReturnValueAction"/>
			<separator/>
			<action id="AnonymousToInner" class="com.intellij.java.impl.refactoring.actions.AnonymousToInnerAction"/>
			<action id="EncapsulateFields" class="com.intellij.java.impl.refactoring.actions.EncapsulateFieldsAction"/>
			<action id="ReplaceTempWithQuery" class="com.intellij.java.impl.refactoring.actions.TempWithQueryAction"/>
			<action id="ReplaceConstructorWithFactory" class="com.intellij.java.impl.refactoring.actions.ReplaceConstructorWithFactoryAction"/>
			<action id="ReplaceConstructorWithBuilder" class="com.intellij.java.impl.refactoring.actions.ReplaceConstructorWithBuilderAction"/>
			<separator/>
			<action id="Generify" class="com.intellij.java.impl.refactoring.actions.TypeCookAction"/>
			<action id="Migrate" class="com.intellij.java.impl.refactoring.actions.MigrateAction"/>
			<separator/>

			<add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="MemberPushDown"/>
		</group>

		<action id="Hotswap" class="com.intellij.java.debugger.impl.actions.HotSwapAction">
			<add-to-group group-id="DebugMainMenu" anchor="before" relative-to-action="StepOver"/>
		</action>

		<action id="Debugger.PopFrame" class="com.intellij.java.debugger.impl.actions.PopFrameAction" icon="consulo.platform.base.PlatformIconGroup@actions.popframe">
			<add-to-group group-id="DebugMainMenu" anchor="after" relative-to-action="ForceRunToCursor"/>
		</action>

		<group id="ToggleBreakpointAction">
			<action id="ToggleMethodBreakpoint" class="com.intellij.java.debugger.impl.actions.ToggleMethodBreakpointAction"/>
			<action id="ToggleFieldBreakpoint" class="com.intellij.java.debugger.impl.actions.ToggleFieldBreakpointAction"/>
			<!--Moved to XDebugger <action id="ToggleBreakpointEnabled" class="com.intellij.debugger.actions.ToggleBreakpointEnabledAction"/>-->
			<add-to-group group-id="DebugMainMenu" anchor="after" relative-to-action="ToggleLineBreakpoint"/>
		</group>

		<action id="ExportThreads" class="com.intellij.java.debugger.impl.actions.ExportThreadsAction" icon="consulo.platform.base.PlatformIconGroup@actions.export">
			<add-to-group group-id="RunMenu" anchor="last"/>
		</action>
		<action id="DumpThreads" class="com.intellij.java.debugger.impl.actions.ThreadDumpAction" text="Take a thread dump" icon="consulo.platform.base.PlatformIconGroup@actions.dump">
			<add-to-group group-id="RunMenu" anchor="last"/>
		</action>

		<action id="GenerateJavadoc" class="com.intellij.java.impl.javadoc.actions.GenerateJavadocAction" can-use-project-as-default="true" require-module-extensions="java">
			<add-to-group group-id="ToolsBasicGroup" anchor="after" relative-to-action="SaveFileAsTemplate"/>
		</action>

		<!--<action id="DebugListen" internal="true" class="com.intellij.debugger.actions.ThrowDebugExceptionAction">
		  <add-to-group group-id="Internal.Errors"/>
		</action> -->

		<action id="GenerateVisitorByHierarchy" internal="true" class="com.intellij.java.impl.internal.GenerateVisitorByHierarchyAction"
				text="Generate Hierarchy Visitor">
			<add-to-group group-id="Internal"/>
		</action>

		<action id="UsedIconsListing" internal="true" class="com.intellij.java.impl.internal.UsedIconsListingAction"
				text="List Used Icons">
			<add-to-group group-id="Internal"/>
		</action>

		<action id="StaticIconFields" internal="true" class="com.intellij.java.impl.internal.StaticIconFieldsAction"
				text="List Static Field Initializers">
			<add-to-group group-id="Internal"/>
		</action>

		<group id="JavaDebuggerActions">
			<action id="Debugger.CustomizeContextView" class="com.intellij.java.debugger.impl.actions.CustomizeContextViewAction">
				<add-to-group group-id="XDebugger.Variables.Tree.Popup" anchor="last"/>
				<add-to-group group-id="XDebugger.Watches.Tree.Popup" anchor="last"/>
			</action>
			<action id="Debugger.CustomizeThreadsView" class="com.intellij.java.debugger.impl.actions.CustomizeThreadsViewAction">
				<add-to-group group-id="XDebugger.Frames.Tree.Popup" anchor="last"/>
			</action>
			<action id="Debugger.EditFrameSource" class="com.intellij.java.debugger.impl.actions.EditFrameSourceAction"/>
			<action id="Debugger.EditNodeSource" class="com.intellij.java.debugger.impl.actions.EditSourceAction"/>
			<action id="Debugger.EditTypeSource" class="com.intellij.java.debugger.impl.actions.JumpToObjectAction"/>
			<reference ref="Debugger.PopFrame"/>
			<action id="Debugger.ViewAsGroup" class="com.intellij.java.debugger.impl.actions.ViewAsGroup">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>
			<action id="Debugger.AdjustArrayRange" class="com.intellij.java.debugger.impl.actions.ArrayAction$AdjustArrayRangeAction">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>
			<!--<action id="Debugger.SetValue" class="com.intellij.debugger.actions.SetValueAction"/>-->
			<!--<action id="Debugger.ShowAsHex" class="com.intellij.debugger.actions.ShowAsHexAction" text="Show as Hex"/>-->
			<action id="Debugger.ResumeThread" class="com.intellij.java.debugger.impl.actions.ResumeThreadAction"/>
			<action id="Debugger.FreezeThread" class="com.intellij.java.debugger.impl.actions.FreezeThreadAction"/>
			<action id="Debugger.InterruptThread" class="com.intellij.java.debugger.impl.actions.InterruptThreadAction"/>
			<action id="Debugger.CreateRenderer" class="com.intellij.java.debugger.impl.actions.CreateRendererAction" text="Create..."/>
			<action id="Debugger.AutoRenderer" class="com.intellij.java.debugger.impl.actions.AutoRendererAction"/>
			<action id="Debugger.MuteRenderers" class="com.intellij.java.debugger.impl.ui.tree.actions.ForceOnDemandRenderersAction" text="Mute Renderers">
				<add-to-group group-id="XDebugger.ValueGroup" anchor="last"/>
			</action>

			<add-to-group group-id="DebuggerActions" anchor="first"/>
		</group>

		<group id="Debugger.Representation">
			<reference ref="Debugger.CreateRenderer"/>
			<separator/>
			<reference ref="Debugger.AutoRenderer"/>
		</group>

		<group id="EditorPopupMenuDebugJava">
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<add-to-group group-id="EditorPopupMenuDebug" anchor="last"/>
		</group>

		<group id="JavaCompileGroup">
			<reference ref="ToggleMethodBreakpoint"/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<add-to-group group-id="ProjectViewCompileGroup" anchor="first"/>
			<add-to-group group-id="StructureViewCompileGroup" anchor="first"/>
		</group>

		<action id="TypeHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.type.TypeHierarchyBrowser$BaseOnThisTypeAction">
			<add-to-group group-id="TypeHierarchyPopupMenu" anchor="first"/>
		</action>

		<group id="JavaMethodHierarchyPopupMenu">
			<action id="MethodHierarchy.ImplementMethodAction" class="com.intellij.java.impl.ide.hierarchy.method.ImplementMethodAction"
					use-shortcut-of="ImplementMethods"/>
			<action id="MethodHierarchy.OverrideMethodAction" class="com.intellij.java.impl.ide.hierarchy.method.OverrideMethodAction"
					use-shortcut-of="OverrideMethods"/>
			<separator/>
			<add-to-group group-id="MethodHierarchyPopupMenu" anchor="first"/>
		</group>

		<action id="MethodHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.method.MethodHierarchyBrowser$BaseOnThisMethodAction">
			<add-to-group group-id="MethodHierarchyPopupMenu" anchor="first"/>
		</action>

		<action id="CallHierarchy.BaseOnThisType" class="com.intellij.java.impl.ide.hierarchy.call.CallHierarchyBrowser$BaseOnThisMethodAction">
			<add-to-group group-id="CallHierarchyPopupMenu" anchor="first"/>
		</action>


		<group id="MemoryView.SettingsPopupActionGroup">
			<action class="com.intellij.java.debugger.impl.memory.action.ShowClassesWithInstanceAction"
					id="MemoryView.ShowOnlyWithInstances"
					text="Show With Instances Only"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowClassesWithDiffAction"
					id="MemoryView.ShowOnlyWithDiff"
					text="Show Non-Zero Diff Only"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowTrackedAction"
					id="MemoryView.ShowOnlyTracked"
					text="Show Tracked Classes Only"/>

			<separator/>

			<action class="com.intellij.java.debugger.impl.memory.action.EnableBackgroundTrackingAction"
					id="MemoryView.EnableTrackingWithClosedWindow"
					text="Enable Tracking With Hidden Memory View"/>
		</group>

		<group id="MemoryView.ClassesPopupActionGroup">
			<action class="com.intellij.java.debugger.impl.memory.action.ShowInstancesFromClassesViewAction"
					id="MemoryView.ShowInstances"
					text="Show Instances"/>

			<action class="com.intellij.java.debugger.impl.memory.action.ShowNewInstancesAction"
					id="MemoryView.ShowNewInstances"
					text="Show New Instances"/>

			<action class="com.intellij.java.debugger.impl.memory.action.JumpToTypeSourceAction"
					id="MemoryView.JumpToTypeSource"
					text="Jump To Type Source"/>
			<separator/>

			<action class="com.intellij.java.debugger.impl.memory.action.tracking.TrackInstancesToggleAction"
					id="MemoryView.TrackingAction.NewInstancesTracking"
					text="Track New Instances"/>
		</group>

		<action class="com.intellij.java.debugger.impl.memory.action.ShowInstancesByClassAction"
				id="MemoryView.ShowInstancesFromDebuggerTree"
				text="Show Instances">
			<add-to-group group-id="XDebugger.ValueGroup" anchor="after"
						  relative-to-action="Debugger.ShowReferring"/>
		</action>

		<action class="com.intellij.java.debugger.impl.memory.action.tracking.JumpToAllocationSourceAction"
				id="MemoryView.ShowAllocationStackTrace"
				text="Jump To Allocation Position">
			<add-to-group group-id="XDebugger.ValueGroup" anchor="after"
						  relative-to-action="XDebugger.JumpToTypeSource"/>
		</action>

		<group id="Debugger.FramePanelPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.EvaluationDialogPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/> -->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.InspectPanelPopup">
			<reference ref="Debugger.AdjustArrayRange"/>
			<reference ref="XDebugger.Inspect"/>
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/> -->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/> -->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>

		<group id="Debugger.ThreadsPanelPopup">
			<!--<reference ref="Debugger.ResumeThread"/>-->
			<!--<reference ref="Debugger.FreezeThread"/>-->
			<reference ref="Debugger.InterruptThread"/>
			<!--<reference ref="Debugger.ShowFrame"/>-->
			<reference ref="Debugger.PopFrame"/>
			<!--<reference ref="Debugger.EditFrameSource"/>-->
			<!--<reference ref="Debugger.EditTypeSource"/>-->
			<!--<reference ref="EditSource"/>-->
			<separator/>
			<reference ref="ExportThreads"/>
			<separator/>
			<reference ref="Debugger.CustomizeThreadsView"/>
		</group>

		<group id="Debugger.WatchesPanelPopup">
			<!--<reference ref="Debugger.NewWatch"/>-->
			<!--<reference ref="Debugger.EditWatch"/>-->
			<!--<reference ref="Debugger.RemoveWatch"/>-->
			<!--<reference ref="Debugger.RemoveAllWatches"/>-->
			<separator/>
			<reference ref="Debugger.AdjustArrayRange"/>
			<!--<reference ref="Debugger.Inspect"/>-->
			<reference ref="Debugger.MarkObject"/>
			<!--<reference ref="Debugger.SetValue"/>-->
			<reference ref="Debugger.EditNodeSource"/>
			<reference ref="Debugger.EditTypeSource"/>
			<separator/>
			<!--<reference ref="Debugger.ShowAsHex"/>-->
			<reference ref="Debugger.ViewAsGroup"/>
			<separator/>
			<reference ref="Debugger.AddToWatch"/>
			<separator/>
			<reference ref="ToggleFieldBreakpoint"/>
			<separator/>
			<!--<reference ref="Debugger.CopyValue"/>-->
			<!--<reference ref="Debugger.ViewText"/>-->
			<!--<reference ref="Debugger.CompareValueWithClipboard"/>-->
			<reference ref="Debugger.CustomizeContextView"/>
		</group>
	</actions>

	<extensionPoints>
		<extensionPoint name="manifest.headerParser" beanClass="consulo.java.manifest.lang.headerparser.HeaderParserEP">
			<with attribute="implementationClass" implements="org.osmorc.manifest.lang.headerparser.HeaderParser"/>
		</extensionPoint>

		<extensionPoint name="typeAnnotationModifier" interface="com.intellij.java.language.psi.augment.TypeAnnotationModifier"/>
		<extensionPoint name="augmentProvider" interface="com.intellij.java.language.psi.augment.PsiAugmentProvider"/>
		<extensionPoint name="cantBeStatic" interface="consulo.util.lang.function.Condition"/>

		<extensionPoint name="allOverridingMethodsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="annotatedElementsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="annotatedPackagesSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="classInheritorsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="deepestSuperMethodsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="directClassInheritorsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="functionalExpressionSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="methodReferencesSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="classesWithAnnotatedMembersSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="overridingMethodsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="superMethodsSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="allClassesSearch" interface="consulo.application.util.query.QueryExecutor"/>
		<extensionPoint name="importFilter" interface="com.intellij.java.language.codeInsight.ImportFilter"/>

		<extensionPoint name="encapsulateFields.helper" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.encapsulateFields.EncapsulateFieldHelper"/>
		</extensionPoint>
		<extensionPoint name="attachSourcesProvider" interface="com.intellij.java.impl.codeInsight.AttachSourcesProvider"/>

		<extensionPoint name="variableTypeCalculator" interface="com.intellij.java.impl.codeInsight.template.macro.VariableTypeCalculator"/>

		<extensionPoint name="testPatcher" interface="com.intellij.java.execution.JavaTestPatcher"/>
		<extensionPoint name="exceptionFilter" interface="com.intellij.java.execution.filters.ExceptionFilterFactory"/>
		<extensionPoint name="programPatcher"
						interface="com.intellij.java.execution.runners.JavaProgramPatcher"/>

		<extensionPoint name="codeInsight.changeVariableTypeQuickFixProvider"
						interface="com.intellij.java.analysis.impl.codeInsight.quickfix.ChangeVariableTypeQuickFixProvider"/>
		<extensionPoint name="conversion.rule"
						interface="com.intellij.java.impl.refactoring.typeMigration.rules.TypeConversionRule"/>

		<extensionPoint name="overrideImplementsAnnotationsHandler"
						interface="com.intellij.java.impl.codeInsight.generation.OverrideImplementsAnnotationsHandler"/>
		<extensionPoint name="generateAccessorProvider"
						interface="consulo.ide.impl.idea.util.NotNullFunction"/>

		<extensionPoint name="junitRecognizer"
						interface="com.intellij.java.execution.JUnitRecognizer"/>

		<extensionPoint name="deadCode"
						interface="consulo.ide.impl.idea.codeInspection.reference.EntryPoint"/>


		<extensionPoint name="canBeFinal"
						interface="com.intellij.java.analysis.impl.codeInspection.canBeFinal.CanBeFinalHandler"/>
		<!-- PsiMember -->
		<extensionPoint name="javaDocNotNecessary"
						interface="consulo.util.lang.function.Condition"/>

		<!-- RefMethod -->
		<extensionPoint name="canBeEmpty"
						interface="consulo.util.lang.function.Condition"/>

		<extensionPoint name="safeDelete.importSearcher"
						interface="com.intellij.java.impl.refactoring.safeDelete.ImportSearcher"/>

		<extensionPoint name="visibility"
						interface="com.intellij.java.impl.codeInspection.visibility.VisibilityExtension"/>

		<extensionPoint name="methodImplementor"
						interface="com.intellij.java.impl.codeInsight.MethodImplementor"/>

		<extensionPoint name="codeInsight.containerProvider"
						interface="consulo.language.psi.search.ContainerProvider"/>

		<extensionPoint name="predefinedMigrationMapProvider"
						interface="com.intellij.java.impl.refactoring.migration.PredefinedMigrationProvider"/>

		<extensionPoint name="debugger.codeFragmentFactory"
						interface="com.intellij.java.debugger.engine.evaluation.CodeFragmentFactory"/>

		<extensionPoint name="debugger.nodeRenderer" interface="com.intellij.java.debugger.impl.ui.tree.render.NodeRenderer"/>

		<extensionPoint name="debugger.managerListener" interface="com.intellij.java.debugger.impl.DebuggerManagerListener" area="PROJECT"/>

		<extensionPoint name="debugger.sourcePositionProvider" interface="com.intellij.java.debugger.impl.engine.SourcePositionProvider"/>

		<extensionPoint name="debugger.nodeNameAdjuster" interface="com.intellij.java.debugger.ui.tree.NodeDescriptorNameAdjuster"/>

		<extensionPoint name="debugger.jvmSteppingCommandProvider" interface="com.intellij.java.debugger.impl.JvmSteppingCommandProvider"/>

		<extensionPoint name="debugger.syntheticProvider" interface="com.intellij.java.debugger.engine.SyntheticTypeComponentProvider"/>

		<extensionPoint name="debugger.sourcePositionHighlighter" interface="com.intellij.java.debugger.engine.SourcePositionHighlighter"/>
		<extensionPoint name="debugger.extraSteppingFilter" interface="com.intellij.java.debugger.impl.engine.ExtraSteppingFilter"/>
		<extensionPoint name="debugger.simplePropertyGetterProvider" interface="com.intellij.java.debugger.engine.SimplePropertyGetterProvider"/>
		<extensionPoint name="debugger.frameExtraVarsProvider" interface="com.intellij.java.debugger.impl.engine.FrameExtraVariablesProvider"/>

		<extensionPoint name="debugger.positionManagerFactory"
						interface="com.intellij.java.debugger.PositionManagerFactory"
						area="PROJECT"/>
		<extensionPoint name="debugger.javaBreakpointHandlerFactory"
						interface="com.intellij.java.debugger.impl.engine.JavaBreakpointHandlerFactory"/>
		<extensionPoint name="debugger.jvmSmartStepIntoHandler"
						interface="com.intellij.java.debugger.impl.actions.JvmSmartStepIntoHandler"/>

		<extensionPoint name="testFramework"
						interface="com.intellij.java.language.testIntegration.TestFramework"/>

		<extensionPoint name="expressionSurrounder"
						interface="com.intellij.java.impl.codeInsight.generation.surroundWith.JavaExpressionSurrounder"/>


		<extensionPoint name="debuggerClassFilterProvider" interface="com.intellij.java.debugger.ui.classFilter.DebuggerClassFilterProvider"/>
		<extensionPoint name="topLevelClassProvider" interface="com.intellij.java.debugger.engine.TopLevelParentClassProvider"/>

		<extensionPoint name="debuggerEditorTextProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.debugger.impl.EditorTextProvider"/>
		</extensionPoint>

		<extensionPoint name="javadocTagInfo" area="PROJECT" interface="com.intellij.java.language.psi.javadoc.JavadocTagInfo"/>

		<extensionPoint name="refactoring.introduceParameterMethodUsagesProcessor"
						interface="com.intellij.java.impl.refactoring.introduceParameter.IntroduceParameterMethodUsagesProcessor"/>

		<extensionPoint name="annotationSupport" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.language.psi.PsiAnnotationSupport"/>
		</extensionPoint>

		<extensionPoint name="projectModelModifier" interface="com.intellij.java.impl.openapi.roots.JavaProjectModelModifier" area="PROJECT"/>
		<extensionPoint name="codeInsight.externalLibraryResolver" interface="com.intellij.java.impl.codeInsight.daemon.quickFix.ExternalLibraryResolver"/>

		<extensionPoint name="constantExpressionEvaluator" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.language.impl.psi.impl.ConstantExpressionEvaluator"/>
		</extensionPoint>

		<extensionPoint name="expressionConverter" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.introduceParameter.ExpressionConverter"/>
		</extensionPoint>

		<!--<extensionPoint name="expectedTypesProvider" interface="com.intellij.codeInsight.ExpectedTypesProviderExtension"/>-->

		<extensionPoint name="elementFinder" area="PROJECT" interface="com.intellij.java.language.psi.PsiElementFinder"/>
		<extensionPoint name="java.shortNamesCache" area="PROJECT" interface="com.intellij.java.language.psi.search.PsiShortNamesCache"/>

		<extensionPoint name="generation.topLevelFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.language.psi.JVMElementFactoryProvider"/>
		</extensionPoint>

		<extensionPoint name="codeInsight.createFieldFromUsageHelper" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.codeInsight.daemon.impl.quickfix.CreateFieldFromUsageHelper"/>
		</extensionPoint>

		<extensionPoint name="getterSetterProvider" interface="com.intellij.java.impl.codeInsight.generation.GetterSetterPrototypeProvider"/>
		<extensionPoint name="generation.toStringClassFilter" interface="com.intellij.java.impl.generate.tostring.GenerateToStringClassFilter"/>


		<extensionPoint name="refactoring.safeDelete.JavaSafeDeleteDelegate" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.safeDelete.JavaSafeDeleteDelegate"/>
		</extensionPoint>

		<extensionPoint name="constructorBodyGenerator"
						beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.codeInsight.generation.ConstructorBodyGenerator"/>
		</extensionPoint>

		<extensionPoint name="refactoring.moveInnerHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.move.moveInner.MoveInnerHandler"/>
		</extensionPoint>

		<extensionPoint name="refactoring.pullUpHelperFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.memberPullUp.PullUpHelperFactory"/>
		</extensionPoint>

		<extensionPoint name="refactoring.moveClassToInnerHandler"
						interface="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveClassToInnerHandler"/>

		<extensionPoint name="refactoring.moveAllClassesInFileHandler"
						interface="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveAllClassesInFileHandler"/>

		<extensionPoint name="refactoring.moveClassHandler" interface="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveClassHandler"/>

		<extensionPoint name="refactoring.moveMemberHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.refactoring.move.moveMembers.MoveMemberHandler"/>
		</extensionPoint>

		<extensionPoint name="testGenerator"
						beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.testIntegration.createTest.TestGenerator"/>
		</extensionPoint>

		<extensionPoint name="psi.clsCustomNavigationPolicy"
						interface="com.intellij.java.language.impl.psi.impl.compiled.ClsCustomNavigationPolicy"/>
		<extensionPoint name="extraExceptionHandler" interface="consulo.java.language.impl.codeInsight.ExtraExceptionHandler"/>

		<extensionPoint name="bytecodeCompilerProcessor" interface="consulo.java.compiler.bytecodeProcessing.JavaBytecodeProcessor"/>

		<extensionPoint name="compiler.makeDependencyProcessor" interface="com.intellij.java.compiler.impl.cache.DependencyProcessor"/>
		<extensionPoint name="runConfigurationExtension" interface="com.intellij.java.execution.impl.RunConfigurationExtension"/>
		<extensionPoint name="jreProvider" interface="com.intellij.java.execution.impl.ui.JreProvider"/>
		<extensionPoint name="vetoSPICondition" interface="consulo.util.lang.function.Condition"/>
		<extensionPoint name="codeStyle.referenceAdjuster" beanClass="com.intellij.lang.LanguageExtensionPoint">
			<with attribute="implementationClass" implements="com.intellij.java.impl.psi.codeStyle.ReferenceAdjuster"/>
		</extensionPoint>
		<extensionPoint name="resourceBundleManager"
						interface="com.intellij.java.impl.lang.properties.psi.ResourceBundleManager"
						area="PROJECT"/>
		<extensionPoint name="i18nizeHandlerProvider" interface="com.intellij.java.impl.codeInspection.i18n.I18nizeHandlerProvider"/>

		<extensionPoint name="documentationDelegateProvider" interface="com.intellij.java.impl.codeInsight.javadoc.DocumentationDelegateProvider"/>

		<extensionPoint name="inferredAnnotationProvider" interface="com.intellij.java.language.codeInsight.InferredAnnotationProvider" area="PROJECT"/>
	</extensionPoints>

	<extensions defaultExtensionNs="consulo.java">

		<expressionSurrounder implementation="com.intellij.java.impl.debugger.codeinsight.JavaWithRuntimeCastSurrounder"/>

		<inferredAnnotationProvider implementation="com.intellij.java.analysis.impl.codeInsight.DefaultInferredAnnotationProvider"/>

		<superMethodsSearch implementation="com.intellij.java.indexing.impl.search.MethodSuperSearcher"/>
		<annotatedPackagesSearch implementation="com.intellij.java.impl.psi.impl.search.AnnotatedPackagesSearcher"/>
		<directClassInheritorsSearch implementation="com.intellij.java.indexing.impl.search.JavaDirectInheritorsSearcher"/>
		<classInheritorsSearch implementation="com.intellij.java.indexing.impl.search.JavaClassInheritorsSearcher"/>
		<overridingMethodsSearch implementation="com.intellij.java.indexing.impl.search.JavaOverridingMethodsSearcher"/>
		<allOverridingMethodsSearch implementation="com.intellij.java.indexing.impl.search.JavaAllOverridingMethodsSearcher"/>
		<methodReferencesSearch implementation="com.intellij.java.indexing.impl.search.MethodUsagesSearcher"/>
		<deepestSuperMethodsSearch implementation="com.intellij.java.indexing.impl.search.MethodDeepestSuperSearcher"/>
		<functionalExpressionSearch implementation="com.intellij.java.indexing.impl.search.JavaFunctionalExpressionSearcher"/>

		<encapsulateFields.helper language="JAVA" implementationClass="com.intellij.java.impl.refactoring.encapsulateFields.JavaEncapsulateFieldHelper"/>
		<codeStyle.referenceAdjuster language="JAVA" implementationClass="com.intellij.java.impl.psi.impl.source.codeStyle.JavaReferenceAdjuster"/>

		<constantExpressionEvaluator language="JAVA" implementationClass="com.intellij.java.language.impl.psi.impl.PsiExpressionEvaluator"/>
		<codeInsight.changeVariableTypeQuickFixProvider
				implementation="com.intellij.java.impl.codeInsight.daemon.impl.quickfix.VariableTypeQuickFixProvider"/>
		<overrideImplementsAnnotationsHandler implementation="com.intellij.java.impl.codeInsight.generation.OverrideImplementsAnnotationsHandlerImpl"/>

		<expressionConverter implementationClass="com.intellij.java.impl.refactoring.introduceParameter.JavaExpressionConverter" language="JAVA"/>

		<codeInsight.createFieldFromUsageHelper language="JAVA"
												implementationClass="com.intellij.java.impl.codeInsight.daemon.impl.quickfix.JavaCreateFieldFromUsageHelper"/>

		<codeInsight.containerProvider implementation="com.intellij.java.language.impl.codeInsight.JavaContainerProvider" id="JAVA"/>




		<constructorBodyGenerator language="JAVA"
								  implementationClass="com.intellij.java.impl.codeInsight.generation.JavaConstructorBodyWithSuperCallGenerator"/>

		<refactoring.moveAllClassesInFileHandler
				implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveJavaClassesInFileHandler" id="java"/>

		<refactoring.moveClassHandler implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveJavaClassHandler" id="java"/>
		<refactoring.moveClassToInnerHandler implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.JavaMoveClassToInnerHandler"
											 id="java"/>
		<refactoring.moveMemberHandler language="JAVA" implementationClass="com.intellij.java.impl.refactoring.move.moveMembers.MoveJavaMemberHandler"
									   id="java"/>

		<refactoring.safeDelete.JavaSafeDeleteDelegate implementationClass="com.intellij.java.impl.refactoring.safeDelete.JavaSafeDeleteDelegateImpl"
													   language="JAVA"/>
		<refactoring.pullUpHelperFactory language="JAVA" implementationClass="com.intellij.java.impl.refactoring.memberPullUp.JavaPullUpHelperFactory"/>

		<safeDelete.importSearcher implementation="com.intellij.java.impl.refactoring.safeDelete.JavaImportSearcher"/>

		<refactoring.introduceParameterMethodUsagesProcessor
				implementation="com.intellij.java.impl.refactoring.introduceParameter.JavaIntroduceParameterMethodUsagesProcessor"/>

		<testGenerator language="JAVA" implementationClass="com.intellij.java.impl.testIntegration.createTest.JavaTestGenerator"/>

		<debugger.jvmSmartStepIntoHandler implementation="com.intellij.java.debugger.impl.actions.JavaSmartStepIntoHandler"/>

		<debugger.sourcePositionProvider implementation="com.intellij.java.debugger.impl.engine.DefaultSourcePositionProvider" order="last"/>
		<debugger.sourcePositionHighlighter implementation="com.intellij.java.debugger.impl.engine.JavaSourcePositionHighlighter"/>

		<debugger.managerListener implementation="com.intellij.java.debugger.impl.HotSwapManager$Listener"/>
		<debugger.managerListener implementation="com.intellij.java.debugger.impl.ui.HotSwapUIImpl$Listener"/>

		<debugger.simplePropertyGetterProvider implementation="com.intellij.java.debugger.impl.engine.JavaSimpleGetterProvider"/>

		<debugger.nodeRenderer implementation="com.intellij.java.debugger.impl.ui.tree.render.ColorObjectRenderer"/>
		<debugger.nodeRenderer implementation="com.intellij.java.debugger.impl.ui.tree.render.BinaryRenderer"/>
		<debugger.nodeRenderer implementation="com.intellij.java.debugger.impl.ui.tree.render.TimestampRenderer"/>
		<debugger.nodeRenderer implementation="com.intellij.java.debugger.impl.ui.tree.render.FileObjectRenderer"/>
		<debugger.nodeRenderer implementation="com.intellij.java.debugger.impl.ui.tree.render.StackTraceElementObjectRenderer"/>

		<generation.toStringClassFilter implementation="com.intellij.java.impl.generate.tostring.GenerateToStringInterfaceFilter" order="last"/>

		<projectModelModifier implementation="com.intellij.java.impl.openapi.roots.impl.IdeaProjectModelModifier" order="last"/>
	</extensions>

	<extensions defaultExtensionNs="com.intellij">


		<projectService serviceInterface="com.intellij.java.debugger.impl.ui.HotSwapUI" serviceImplementation="com.intellij.java.debugger.impl.ui.HotSwapUIImpl"/>


		<projectConfigurable id="project.propCompiler.java" bundle="messages.JavaCoreBundle" key="java" parentId="project.propCompiler"
							 instance="com.intellij.java.compiler.impl.javaCompiler.JavaCompilerConfigurable"/>

		<projectConfigurable bundle="messages.JavaBundle" key="annotation.processor.name" parentId="project.propCompiler.java"
							 instance="com.intellij.java.compiler.impl.options.AnnotationProcessorsConfigurable"/>

		<projectConfigurable bundle="messages.JavaBundle" key="javac.name" parentId="project.propCompiler.java"
							 instance="consulo.java.compiler.impl.javaCompiler.ui.JavacConfigurable"/>



		<projectConfigurable
				id="editor.preferences.import.java"
				parentId="editor.preferences.import"
				displayName="Java"
				instance="com.intellij.java.impl.application.options.editor.JavaAutoImportConfigurable"/>
		<applicationConfigurable
				id="editor.preferences.folding.java"
				parentId="editor.preferences.folding"
				displayName="Java"
				instance="consulo.java.impl.application.options.JavaCodeFoldingConfigurable"/>

		<referencesSearch implementation="com.intellij.java.indexing.impl.search.SimpleAccessorReferenceSearcher"/>
		<referencesSearch implementation="com.intellij.java.impl.psi.impl.search.VariableInIncompleteCodeSearcher"/>
		<referencesSearch implementation="com.intellij.java.indexing.impl.search.SPIReferencesSearcher"/>

		<definitionsScopedSearch implementation="com.intellij.java.indexing.impl.MethodImplementationsSearch"/>
		<definitionsScopedSearch implementation="com.intellij.java.indexing.impl.ClassImplementationsSearch"/>


		<lookup.actionProvider implementation="com.intellij.java.impl.codeInsight.completion.ImportStaticLookupActionProvider" id="importStatic"/>
		<lookup.actionProvider implementation="com.intellij.java.impl.codeInsight.completion.ExcludeFromCompletionLookupActionProvider"
							   id="excludeFromCompletion" order="last"/>

		<completion.confidence language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavadocCompletionConfidence" id="javadoc" order="before javaComments"/>
		<completion.confidence language="JAVA" implementationClass="consulo.language.editor.completion.SkipAutopopupInComments" id="javaComments"/>
		<completion.confidence language="JAVA" implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionConfidence" id="javaReflection"/>
		<completion.confidence language="JAVA" implementationClass="consulo.language.editor.completion.SkipAutopopupInStrings" id="javaSkipAutopopupInStrings"/>

		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.RefactoringCompletionContributor"
								id="javaRefactoring"
								order="first"/>

		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaNoVariantsDelegator"
								id="javaBasic2ClassName"
								order="before javaMemberName, before javaLegacy, after liveTemplates"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInspection.magicConstant.MagicCompletionContributor"
								id="magicCompletion"
								order="after javaBasic2ClassName"/>
		<completion.contributor language="XML" implementationClass="com.intellij.java.impl.codeInsight.completion.XmlBasicToClassNameDelegator"
								id="basic2ClassName"
								order="after xml"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaCompletionContributor"
								id="javaLegacy"
								order="last, before legacy, before default, before javaClassName"/>
		<completion.contributor language="any" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaClassReferenceCompletionContributor"
								id="javaClassReference" order="before legacy"/>

		<completion.contributor language="any" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaMethodMergingContributor"
								id="methodMerger"
								order="before javaLegacy, before default"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaMemberNameCompletionContributor"
								id="javaMemberName"
								order="before javaOverride"/>
		<completion.contributor language="any" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaClassNameCompletionContributor"
								id="javaClassName"
								order="last, before default"/>

		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaDocCompletionContributor"
								id="javadoc"
								order="last, before javaLegacy"/>

		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.NullSmartCompletionContributor"
								id="smartNull"
								order="last, before javaSmart"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaSmartCompletionContributor"
								id="javaSmart"
								order="last, before default"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.JavaReflectionCompletionContributor" id="javaReflection"
								order="last, before javaLegacy"/>
		<completion.contributor language="JAVA" implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.JavaMethodHandleCompletionContributor" id="javaMethodHandle"
								order="last, before javaLegacy"/>


		<lang.elementManipulator forClass="com.intellij.java.language.psi.PsiLiteralExpression"
								 implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.manipulators.StringLiteralManipulator"/>
		<lang.elementManipulator forClass="com.intellij.java.language.psi.javadoc.PsiDocTag"
								 implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.manipulators.PsiDocTagValueManipulator"/>

		<applicationService serviceInterface="com.intellij.java.impl.util.xml.converters.values.ClassValueConverter"
							serviceImplementation="com.intellij.java.impl.util.xml.converters.ClassValueConverterImpl"/>

		<applicationService serviceImplementation="com.intellij.java.debugger.impl.memory.component.MemoryViewManager"/>
		<projectService serviceImplementation="com.intellij.java.debugger.impl.memory.component.InstancesTracker"/>

		<applicationService serviceInterface="com.intellij.java.impl.util.xml.converters.values.ClassArrayConverter"
							serviceImplementation="com.intellij.java.impl.util.xml.converters.ClassArrayConverterImpl"/>



		<applicationService serviceInterface="com.intellij.java.debugger.engine.DebuggerUtils"
							serviceImplementation="com.intellij.java.debugger.impl.DebuggerUtilsImpl"/>



		<applicationService serviceInterface="com.intellij.java.impl.util.descriptors.ConfigFileFactory"
							serviceImplementation="com.intellij.java.impl.util.descriptors.impl.ConfigFileFactoryImpl"/>

		<applicationService serviceInterface="com.intellij.java.impl.generate.template.toString.ToStringTemplatesManager"
							serviceImplementation="com.intellij.java.impl.generate.template.toString.ToStringTemplatesManager"/>

		<applicationService serviceInterface="com.intellij.java.impl.codeInsight.generation.GetterTemplatesManager"
							serviceImplementation="com.intellij.java.impl.codeInsight.generation.GetterTemplatesManager"/>
		<applicationService serviceInterface="com.intellij.java.impl.codeInsight.generation.SetterTemplatesManager"
							serviceImplementation="com.intellij.java.impl.codeInsight.generation.SetterTemplatesManager"/>
		<applicationService serviceInterface="org.jetbrains.java.generate.GenerateToStringActionHandler"
							serviceImplementation="com.intellij.java.impl.generate.GenerateToStringActionHandlerImpl"/>
		<applicationService serviceInterface="org.jetbrains.java.generate.GenerateToStringContext"
							serviceImplementation="org.jetbrains.java.generate.GenerateToStringContext"/>

		<applicationService serviceInterface="com.intellij.java.debugger.impl.settings.NodeRendererSettings"
							serviceImplementation="com.intellij.java.debugger.impl.settings.NodeRendererSettings"/>
		<applicationService serviceInterface="com.intellij.java.debugger.impl.settings.ViewsGeneralSettings"
							serviceImplementation="com.intellij.java.debugger.impl.settings.ViewsGeneralSettings"/>

		<applicationService serviceInterface="com.intellij.java.debugger.impl.settings.ThreadsViewSettings"
							serviceImplementation="com.intellij.java.debugger.impl.settings.ThreadsViewSettings"/>

		<projectService serviceInterface="com.intellij.java.language.util.TreeClassChooserFactory"
						serviceImplementation="com.intellij.java.impl.ide.util.TreeClassChooserFactoryImpl"/>
		<projectService serviceInterface="com.intellij.java.analysis.codeInsight.guess.GuessManager"
						serviceImplementation="com.intellij.java.analysis.impl.codeInsight.guess.impl.GuessManagerImpl"/>


		<projectService serviceInterface="com.intellij.java.language.psi.codeStyle.JavaCodeStyleSettingsFacade"
						serviceImplementation="com.intellij.java.impl.psi.codeStyle.JavaCodeStyleSettingsFacadeImpl"/>


		<projectService serviceInterface="com.intellij.java.language.psi.JavaCodeFragmentFactory"
						serviceImplementation="com.intellij.java.impl.psi.impl.JavaCodeFragmentFactoryImpl"/>

		<projectService serviceInterface="com.intellij.java.language.impl.codeInsight.javadoc.JavaDocCodeStyle"
						serviceImplementation="com.intellij.java.impl.codeInsight.javadoc.JavaDocCodeStyleImpl"/>




		<applicationService serviceInterface="com.intellij.java.analysis.refactoring.JavaRefactoringActionHandlerFactory"
							serviceImplementation="com.intellij.java.impl.refactoring.openapi.impl.JavaRefactoringActionHandlerFactoryImpl"/>
		<changeSignatureDetector language="JAVA" implementationClass="com.intellij.java.impl.refactoring.changeSignature.JavaChangeSignatureDetector"/>

		<applicationService serviceInterface="com.intellij.java.impl.refactoring.JavaRefactoringSettings"
							serviceImplementation="com.intellij.java.impl.refactoring.JavaRefactoringSettings"/>

		<projectService serviceInterface="com.intellij.java.impl.refactoring.RefactoringManager"
						serviceImplementation="com.intellij.java.impl.refactoring.RefactoringManager"/>
		<projectService serviceInterface="com.intellij.java.impl.refactoring.listeners.JavaRefactoringListenerManager"
						serviceImplementation="com.intellij.java.impl.refactoring.listeners.impl.JavaRefactoringListenerManagerImpl"/>
		<projectService serviceInterface="com.intellij.java.impl.refactoring.JavaRefactoringFactory"
						serviceImplementation="com.intellij.java.impl.refactoring.openapi.impl.JavaRefactoringFactoryImpl"/>


		<multiHostInjector
				forClass="com.intellij.java.language.psi.PsiLiteralExpression"
				implementationClass="com.intellij.java.impl.psi.impl.source.tree.injected.JavaConcatenationToInjectorAdapter"
				order="last"/>


		<projectService serviceInterface="com.intellij.java.impl.slicer.SliceToolwindowSettings"
						serviceImplementation="com.intellij.java.impl.slicer.SliceToolwindowSettings"/>
		<projectService serviceInterface="com.intellij.java.impl.slicer.SliceManager"
						serviceImplementation="com.intellij.java.impl.slicer.SliceManager"/>



		<globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
						  groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationInspection"
						  presentation="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationPresentation"/>
		<specialTool shortName="UnusedLibrary" bundle="messages.InspectionsBundle" key="unused.library.display.name"
					 groupPath="Java" groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
					 implementationClass="com.intellij.java.impl.codeInspection.unusedLibraries.UnusedLibrariesInspection"/>
		<specialTool shortName="InconsistentLanguageLevel" displayName="Inconsistent language level settings"
					 groupPath="Java" groupName="Modularization issues" enabledByDefault="false" level="WARNING"
					 implementationClass="com.intellij.java.impl.codeInspection.inconsistentLanguageLevel.InconsistentLanguageLevelInspection"/>
		<globalInspection shortName="WeakerAccess" displayName="Declaration access can be weaker" groupName="Declaration redundancy"
						  groupPath="Java" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.visibility.VisibilityInspection"/>
		<globalInspection shortName="CanBeFinal" displayName="Declaration can have final modifier" groupPath="Java" groupName="Declaration redundancy"
						  enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.canBeFinal.CanBeFinalInspection"/>
		<globalInspection shortName="UnusedParameters" bundle="messages.InspectionsBundle" key="inspection.unused.parameter.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unusedParameters.UnusedParametersInspection"/>
		<globalInspection shortName="SameParameterValue" bundle="messages.InspectionsBundle" key="inspection.same.parameter.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.sameParameterValue.SameParameterValueInspection"/>
		<globalInspection shortName="UnusedReturnValue" bundle="messages.InspectionsBundle" key="inspection.unused.return.value.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unusedReturnValue.UnusedReturnValue"/>
		<globalInspection shortName="SameReturnValue" bundle="messages.InspectionsBundle" key="inspection.same.return.value.display.name"
						  groupPath="Java" groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.sameReturnValue.SameReturnValueInspection"/>
		<globalInspection shortName="EmptyMethod" groupPath="Java" displayName="Empty method" groupName="Declaration redundancy" enabledByDefault="true"
						  level="WARNING" implementationClass="com.intellij.java.impl.codeInspection.emptyMethod.EmptyMethodInspection"/>
		<globalInspection shortName="RedundantThrows" groupPath="Java" displayName="Redundant throws clause" groupName="Declaration redundancy"
						  enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unneededThrows.RedundantThrows"/>
		<localInspection language="JAVA" groupPath="Java" shortName="ConstantConditions" bundle="messages.InspectionsBundle"
						 key="inspection.data.flow.display.name"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.dataFlow.DataFlowInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="UnusedAssignment" displayName="Unused assignment" groupName="Probable bugs"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.impl.codeInspection.defUse.DefUseInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NumericOverflow" displayName="Numeric overflow" groupName="Numeric issues"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.analysis.impl.codeInspection.NumericOverflowInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantCast" displayName="Redundant type cast"
						 groupName="Verbose or redundant code constructs"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.redundantCast.RedundantCastInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantTypeArguments" bundle="messages.InspectionsBundle"
						 key="inspection.redundant.type.display.name"
						 groupName="Verbose or redundant code constructs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.miscGenerics.RedundantTypeArgsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantArrayCreation" bundle="messages.InspectionsBundle"
						 key="inspection.redundant.array.creation.display.name" groupName="Verbose or redundant code constructs"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.miscGenerics.RedundantArrayForVarargsCallInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuspiciousMethodCalls" bundle="messages.InspectionsBundle"
						 key="inspection.suspicious.collections.method.calls.display.name" groupName="Probable bugs" enabledByDefault="true"
						 level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.miscGenerics.SuspiciousCollectionsMethodCallsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="LocalCanBeFinal" bundle="messages.InspectionsBundle"
						 key="inspection.local.can.be.final.display.name"
						 groupName="Code style issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.localCanBeFinal.LocalCanBeFinal"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavaDoc" bundle="messages.InspectionsBundle" key="inspection.javadoc.display.name"
						 groupKey="group.names.javadoc.issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.javaDoc.JavaDocLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavadocReference" bundle="messages.InspectionsBundle"
						 key="inspection.javadoc.ref.display.name"
						 groupKey="group.names.javadoc.issues" enabledByDefault="true" level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.javaDoc.JavaDocReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" suppressId="deprecation" shortName="Deprecation" displayName="Deprecated API usage" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.deprecation.DeprecationInspection"/>
		<localInspection language="XML" shortName="DeprecatedClassUsageInspection" displayName="Deprecated API usage in XML" groupName="XML"
						 enabledByDefault="true" level="WARNING" implementationClass="com.intellij.java.impl.util.xml.DeprecatedClassUsageInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="EqualsAndHashcode" bundle="messages.InspectionsBundle"
						 key="inspection.equals.hashcode.display.name"
						 groupName="General" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.equalsAndHashcode.EqualsAndHashcode"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Since15" bundle="messages.InspectionsBundle" key="inspection.1.5.display.name"
						 groupName="Language level migration aids" enabledByDefault="false" level="ERROR"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.java15api.Java15APIUsageInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Dependency" displayName="Illegal package dependencies" groupName="General" enabledByDefault="true"
						 level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.dependencyViolation.DependencyInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="FieldCanBeLocal" bundle="messages.InspectionsBundle"
						 key="inspection.field.can.be.local.display.name"
						 groupName="Class structure" enabledByDefault="true" level="WARNING" runForWholeFile="true"
						 implementationClass="com.intellij.java.impl.codeInspection.varScopeCanBeNarrowed.FieldCanBeLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="ParameterCanBeLocal" key="inspection.parameter.can.be.local.display.name"
						 groupName="Class structure" enabledByDefault="true" level="WARNING" bundle="messages.InspectionsBundle"
						 implementationClass="com.intellij.java.impl.codeInspection.varScopeCanBeNarrowed.ParameterCanBeLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NullableProblems" bundle="messages.InspectionsBundle"
						 key="inspection.nullable.problems.display.name"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.nullable.NullableStuffInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="TestOnlyProblems" bundle="messages.InspectionsBundle"
						 key="inspection.test.only.problems.display.name"
						 groupName="General" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.testOnly.TestOnlyInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="WrongPackageStatement" bundle="messages.InspectionsBundle" key="wrong.package.statement"
						 groupName="General"
						 enabledByDefault="true" level="ERROR"
						 implementationClass="com.intellij.java.impl.codeInspection.wrongPackageStatement.WrongPackageStatementInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SillyAssignment" bundle="messages.InspectionsBundle"
						 key="inspection.variable.assigned.to.itself.display.name" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.sillyAssignment.SillyAssignmentInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="RedundantThrowsDeclaration" bundle="messages.InspectionsBundle"
						 key="redundant.throws.declaration"
						 groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.unneededThrows.RedundantThrowsDeclaration"/>
		<localInspection language="JAVA" groupPath="Java" shortName="AccessStaticViaInstance" bundle="messages.InspectionsBundle"
						 key="access.static.via.instance" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.accessStaticViaInstance.AccessStaticViaInstance"/>
		<localInspection shortName="DefaultFileTemplate" bundle="messages.InspectionsBundle" key="default.file.template.display.name"
						 groupName="General" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.defaultFileTemplateUsage.DefaultFileTemplateUsageInspection"/>
		<globalInspection shortName="UnnecessaryModuleDependencyInspection" bundle="messages.InspectionsBundle"
						  key="unnecessary.module.dependency.display.name" groupName="Declaration redundancy" enabledByDefault="true"
						  level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.unnecessaryModuleDependency.UnnecessaryModuleDependencyInspection"/>
		<globalInspection shortName="RedundantSuppression" bundle="messages.InspectionsBundle" key="inspection.redundant.suppression.name"
						  groupName="Declaration redundancy" enabledByDefault="false" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.RedundantSuppressInspection"/>

		<globalInspection groupPath="Java" language="JAVA" shortName="unused" displayName="Unused declaration" groupBundle="messages.InspectionsBundle"
						  groupKey="group.names.declaration.redundancy" enabledByDefault="true" level="WARNING"
						  implementationClass="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationInspection"
						  presentation="com.intellij.java.impl.codeInspection.deadCode.UnusedDeclarationPresentation"/>

		<localInspection language="JAVA" groupPath="Java" shortName="UNUSED_IMPORT" displayName="Unused import (editor light)" groupName="Imports"
						 enabledByDefault="true"
						 level="WARNING" implementationClass="com.intellij.java.analysis.impl.codeInspection.unusedImport.UnusedImportLocalInspection"
						 unfair="true"/>

		<localInspection language="JAVA" groupPath="Java" suppressId="unchecked" shortName="UNCHECKED_WARNING" displayName="Unchecked warning" groupName="General"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.uncheckedWarnings.UncheckedWarningLocalInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuspiciousNameCombination" bundle="messages.InspectionsBundle"
						 key="suspicious.name.combination.display.name" groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.suspiciousNameCombination.SuspiciousNameCombinationInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="DuplicateThrows" bundle="messages.InspectionsBundle"
						 key="inspection.duplicate.throws.display.name"
						 groupName="Declaration redundancy" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.duplicateThrows.DuplicateThrowsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="FieldAccessNotGuarded" displayName="Unguarded field access"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.FieldAccessNotGuardedInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="InstanceGuardedByStatic" displayName="Instance member guarded by static field"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.InstanceGuardedByStaticInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NonFinalFieldInImmutable" displayName="Non-final field in @Immutable class"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.NonFinalFieldInImmutableInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="NonFinalGuard" displayName="Non-final @GuardedBy field"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.NonFinalGuardInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="StaticGuardedByInstance" displayName="Static member guarded by instance field or this"
						 groupName="Concurrency annotation issues" enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.StaticGuardedByInstanceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="UnknownGuard" displayName="Unknown @GuardedBy field"
						 groupName="Concurrency annotation issues"
						 enabledByDefault="false" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.concurrencyAnnotations.UnknownGuardInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2Diamond" displayName="Explicit type can be replaced with &lt;&gt;"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.ExplicitTypeCanBeDiamondInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2Lambda" displayName="Anonymous type can be replaced with lambda"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.AnonymousCanBeLambdaInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Anonymous2MethodRef" displayName="Anonymous type can be replaced with method reference"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.AnonymousCanBeMethodReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="Convert2MethodRef" displayName="Lambda can be replaced with method reference"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.LambdaCanBeMethodReferenceInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="CodeBlock2Expr" displayName="Lambda code block can be replaced with expression"
						 groupName="Language level migration aids" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.analysis.impl.codeInspection.RedundantLambdaCodeBlockInspection"/>
		<localInspection language="JAVA" groupPath="Java" suppressId="unchecked" shortName="SafeVarargsDetector"
						 displayName="Possible heap pollution from parameterized vararg type" groupName="Language level migration aids"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.PossibleHeapPollutionVarargsInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="JavacQuirks" bundle="messages.InspectionsBundle" key="inspection.compiler.javac.quirks.name"
						 groupName="Compiler issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.compiler.JavacQuirksInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="MagicConstant" displayName="Magic Constant"
						 groupName="Probable bugs" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.magicConstant.MagicConstantInspection"/>
		<localInspection language="JAVA" groupPath="Java" shortName="SuperClassHasFrequentlyUsedInheritors"
						 groupBundle="messages.InspectionsBundle"
						 groupKey="group.names.inheritance.issues" enabledByDefault="true" level="WARNING"
						 implementationClass="com.intellij.java.impl.codeInspection.inheritance.SuperClassHasFrequentlyUsedInheritorsInspection"
						 displayName="Class may extend a commonly used base class instead of implementing interface"/>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.quickFix.RedundantLambdaParameterTypeIntention</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SplitIfAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.InvertIfConditionAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ExtractIfConditionAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.RemoveRedundantElseAction</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddNotNullAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddDeprecationAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddNullableAnnotationIntention</className>
			<category>Control Flow</category>
			<descriptionDirectoryName>AddAnnotationFix</descriptionDirectoryName>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.IterateOverIterableIntention</className>
			<category>Control Flow</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.DeannotateIntentionAction</className>
			<category>Control Flow</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CreateFieldFromParameterAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AssignFieldFromParameterAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.BindFieldsFromParametersAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.CreateLocalVarFromInstanceofAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.CreateCastExpressionFromInstanceofAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.testIntegration.createTest.CreateTestAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CreateSubclassAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ImplementAbstractMethodAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.CopyAbstractMethodImplementationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SplitDeclarationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.PushConditionInCallAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MoveInitializerToConstructorAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.testIntegration.intention.MoveInitializerToSetUpMethodAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MoveFieldAssignmentToInitializerAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.AddRuntimeExceptionToThrowsAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.MakeTypeGenericAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddOverrideAnnotationAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.DelegateWithDefaultParamValueIntentionAction</className>
			<category>Declaration</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.IntroduceVariableIntentionAction</className>
			<category>Refactorings</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.EncapsulateFieldAction</className>
			<category>Refactorings</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SimplifyBooleanExpressionAction</className>
			<category>Boolean</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConcatenationToMessageFormatAction</className>
			<category>I18N</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertToBasicLatinAction</className>
			<category>I18N</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddOnDemandStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.AddSingleMemberStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ExpandStaticImportAction</className>
			<category>Imports</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInspection.actions.UnimplementInterfaceAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInspection.actions.ReplaceImplementsWithStaticImportAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertColorRepresentationIntentionAction</className>
			<category>Declaration</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertAbsolutePathToRelativeIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ConvertRelativePathToAbsoluteIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.ReplaceCastWithVariableAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.BreakStringOnLineBreaksIntentionAction</className>
			<category>Other</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.RemoveLiteralUnderscoresAction</className>
			<category>Numbers</category>
		</intentionAction>
		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.InsertLiteralUnderscoresAction</className>
			<category>Numbers</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.daemon.impl.quickfix.ConvertToStringLiteralAction</className>
			<category>Strings</category>
		</intentionAction>

		<intentionAction>
			<className>com.intellij.java.impl.codeInsight.intention.impl.SurroundAutoCloseableAction</className>
			<category>Declaration</category>
		</intentionAction>


		<lang.refactoringSupport language="JAVA" implementationClass="com.intellij.java.impl.lang.java.JavaRefactoringSupportProvider"/>
		<lang.refactoringSupport.classMembersRefactoringSupport language="JAVA"
																implementationClass="com.intellij.java.impl.lang.java.JavaClassMembersRefactoringSupport"/>

		<lang.whiteSpaceFormattingStrategy language="JAVA"
										   implementationClass="com.intellij.java.impl.psi.formatter.JavadocWhiteSpaceFormattingStrategy"/>

		<lang.rearranger language="JAVA" implementationClass="com.intellij.java.impl.psi.codeStyle.arrangement.JavaRearranger"/>

		<lang.documentationProvider language="JAVA" implementationClass="com.intellij.java.impl.lang.java.JavaDocumentationProvider"/>
		<documentationProvider implementation="com.intellij.java.impl.lang.java.FileDocumentationProvider" order="last"/>
		<lang.documentationFixer language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.documentation.JavaDocCommentFixer"/>


		<lang.surroundDescriptor language="JAVA"
								 implementationClass="com.intellij.java.impl.codeInsight.generation.surroundWith.JavaExpressionSurroundDescriptor"/>
		<lang.surroundDescriptor language="JAVA"
								 implementationClass="com.intellij.java.impl.codeInsight.generation.surroundWith.JavaStatementsSurroundDescriptor"/>






		<codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.hint.api.impls.MethodParameterInfoHandler"/>
		<codeInsight.parameterInfo language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.hint.api.impls.ReferenceParameterInfoHandler"/>
		<codeInsight.parameterInfo language="JAVA"
								   implementationClass="com.intellij.java.impl.codeInsight.hint.api.impls.AnnotationParameterInfoHandler"/>

		<codeInsight.overrideMethod language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.generation.JavaOverrideMethodsHandler"/>
		<codeInsight.implementMethod language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.generation.JavaImplementMethodsHandler"/>
		<codeInsight.delegateMethods language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.generation.GenerateDelegateHandler"/>
		<codeInsight.gotoSuper language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.navigation.JavaGotoSuperHandler"/>
		<codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.daemon.impl.JavaLineMarkerProvider"/>
		<codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.daemon.impl.IconLineMarkerProvider"/>
		<codeInsight.lineMarkerProvider language="JAVA"
										implementationClass="com.intellij.java.impl.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider"/>

		<annotator language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.daemon.impl.JavaDocAnnotator"/>
		<statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.StatementMover" id="statement"
							  order="before declaration"/>
		<statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.DeclarationMover" id="declaration"
							  order="before xml"/>
		<moveLeftRightHandler language="JAVA" implementationClass="com.intellij.java.impl.codeInsight.editorActions.moveLeftRight.JavaMoveLeftRightHandler"/>



		<lang.psiStructureViewFactory language="JAVA" implementationClass="com.intellij.java.impl.lang.java.JavaStructureViewBuilderFactory"/>


		<lang.smartEnterProcessor language="JAVA"
								  implementationClass="com.intellij.java.impl.codeInsight.editorActions.smartEnter.JavaSmartEnterProcessor"/>



		<stacktrace.fold substring="at java.awt.EventDispatchThread.pumpEventsForFilter("/>
		<stacktrace.fold substring="at java.awt.EventDispatchThread.pumpEventsForHierarchy("/>
		<stacktrace.fold substring="at java.awt.EventDispatchThread.pumpEvents("/>
		<stacktrace.fold substring="at java.awt.Window.dispatchEventImpl("/>
		<stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
		<stacktrace.fold substring="at java.awt.LightweightDispatcher."/>
		<stacktrace.fold substring="at java.awt.Component.dispatchEvent("/>
		<stacktrace.fold substring="at java.awt.EventQueue.dispatchEvent("/>
		<stacktrace.fold substring="at java.awt.Component.dispatchEventImpl("/>
		<stacktrace.fold substring="at java.awt.EventDispatchThread.pumpOneEventForFilters("/>
		<stacktrace.fold substring="at java.awt.Container.processEvent("/>
		<stacktrace.fold substring="at javax.swing.JComponent.processMouseEvent("/>
		<stacktrace.fold substring="at javax.swing.plaf.basic.BasicMenuItemUI"/>
		<stacktrace.fold substring="at java.awt.Component.processMouseEvent("/>
		<stacktrace.fold substring="at javax.swing.AbstractButton.doClick("/>
		<stacktrace.fold substring="at java.awt.Component.processEvent("/>
		<stacktrace.fold substring="at java.awt.Container.dispatchEventImpl("/>
		<stacktrace.fold substring="at javax.swing.DefaultButtonModel.fireActionPerformed("/>
		<stacktrace.fold substring="at javax.swing.DefaultButtonModel.setPressed("/>
		<stacktrace.fold substring="at javax.swing.AbstractButton.fireActionPerformed("/>
		<stacktrace.fold substring="at javax.swing.AbstractButton$Handler.actionPerformed("/>
		<stacktrace.fold substring="at java.awt.EventQueue$1.run("/>
		<stacktrace.fold substring="at java.security.AccessControlContext$1.doIntersectionPrivilege("/>
		<stacktrace.fold substring="at java.awt.EventQueue.dispatchEventImpl("/>
		<stacktrace.fold substring="at java.security.AccessController.doPrivileged(Native Method)"/>
		<stacktrace.fold substring="at java.awt.EventQueue$2.run("/>
		<stacktrace.fold substring="at java.awt.EventQueue.access$000("/>
		<stacktrace.fold substring="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0("/>
		<stacktrace.fold substring="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased("/>

		<stacktrace.fold substring="at java.lang.reflect.Method.invoke("/>
		<stacktrace.fold substring="at java.lang.reflect.Constructor.newInstance("/>
		<stacktrace.fold substring="at sun.reflect."/>
		<stacktrace.fold substring="at java.rmi."/>
		<stacktrace.fold substring="at sun.rmi."/>
		<stacktrace.fold substring="at com.intellij.rt.execution."/>


		<quoteHandler fileType="JAVA" className="com.intellij.java.impl.codeInsight.editorActions.JavaQuoteHandler"/>
		<typedHandler implementation="com.intellij.java.impl.codeInsight.editorActions.JavaTypedHandler" id="java"/>
		<typedHandler implementation="com.intellij.java.impl.codeInsight.editorActions.JavadocTypedHandler" id="javadoc"/>
		<applicationService serviceInterface="consulo.java.impl.application.options.JavaSmartKeysSettings"
							serviceImplementation="consulo.java.impl.application.options.JavaSmartKeysSettings"/>
		<applicationConfigurable id="editor.preferences.smartKeys.java"
								 parentId="editor.preferences.smartKeys"
								 displayName="Java"
								 instance="com.intellij.java.impl.application.options.JavaSmartKeysConfigurable"/>

		<joinLinesHandler implementation="com.intellij.java.impl.codeInsight.editorActions.LiteralJoinLinesHandler"/>
		<joinLinesHandler implementation="com.intellij.java.impl.codeInsight.editorActions.DeclarationJoinLinesHandler"/>
		<joinLinesHandler implementation="com.intellij.java.impl.codeInsight.editorActions.BlockJoinLinesHandler"/>


		<weigher key="proximity" implementationClass="com.intellij.java.impl.psi.util.proximity.ReferenceListWeigher" id="referenceList"
				 order="before samePsiMember"/>
		<weigher key="proximity" implementationClass="com.intellij.java.impl.psi.util.proximity.SamePsiMemberWeigher" id="samePsiMember"
				 order="before explicitlyImported"/>
		<weigher key="proximity" implementationClass="com.intellij.java.impl.psi.util.proximity.ExplicitlyImportedWeigher" id="explicitlyImported"
				 order="before openedInEditor"/>
		<weigher key="proximity" implementationClass="com.intellij.java.impl.psi.util.proximity.JavaInheritanceWeigher" id="javaInheritance"
				 order="after explicitlyImported, before sameLogicalRoot"/>
		<weigher key="proximity" implementationClass="com.intellij.java.impl.psi.util.proximity.KnownElementWeigher" id="knownElement"
				 order="after sameModule, before sdkOrLibrary"/>

		<statistician key="proximity" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaProximityStatistician"/>
		<statistician key="completion" implementationClass="com.intellij.java.impl.codeInsight.completion.JavaCompletionStatistician"/>

		<completion.skip implementation="com.intellij.java.impl.codeInsight.completion.AbstractExpectedTypeSkipper" id="skipAbstract"/>


		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.LiteralSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.DocCommentSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.ListSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.VarargsSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.CodeBlockOrInitializerSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.FinallyBlockSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.MethodOrClassSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.FieldSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.ReferenceSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.DocTagSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.IfStatementSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.TypeCastSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.JavaTokenSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.StatementGroupSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.CaseStatementsSelectioner"/>
		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.AntLikePropertySelectionHandler"/>

		<syntaxHighlighter key="CLASS" implementationClass="com.intellij.java.impl.ide.highlighter.JavaFileHighlighter"/>

		<structureViewBuilder key="CLASS" factoryClass="com.intellij.java.impl.ide.highlighter.JavaClsStructureViewBuilderProvider"/>





		<preFormatProcessor implementation="com.intellij.java.impl.psi.impl.source.codeStyle.FormatCommentsProcessor"/>
		<preFormatProcessor implementation="com.intellij.java.impl.psi.impl.source.codeStyle.FieldInColumnsPreFormatProcessor"/>
		<postFormatProcessor implementation="com.intellij.java.impl.psi.impl.source.codeStyle.BracePostFormatProcessor"/>
		<postFormatProcessor implementation="com.intellij.java.impl.psi.impl.source.codeStyle.ImportPostFormatProcessor"/>
		<postFormatProcessor implementation="com.intellij.java.impl.psi.impl.source.codeStyle.TabPostFormatProcessor"/>
		<codeInspection.InspectionExtension implementation="com.intellij.java.impl.codeInspection.ex.JavaInspectionExtensionsFactory"/>

		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.ArrayVariableMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.VariableOfTypeMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.ComponentTypeOfMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.SuggestVariableNameMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.SuggestFirstVariableNameMacro"/>

		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.SuggestIndexNameMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.GuessElementTypeMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.ExpectedTypeMacro"/>

		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.AnnotatedMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.MethodNameMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.MethodParametersMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.MethodReturnTypeMacro"/>

		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.ClassNameMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.QualifiedClassNameMacro"/>

		<liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentPackageMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.RightSideTypeMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.CastToLeftSideTypeMacro"/>

		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.IterableVariableMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.IterableComponentTypeMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.DescendantClassesEnumMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.SubtypesMacro"/>
		<liveTemplateMacro implementation="com.intellij.java.impl.codeInsight.template.macro.TypeOfVariableMacro"/>






		<declarationRangeHandler key="com.intellij.java.language.psi.PsiMethod"
								 implementationClass="com.intellij.java.impl.codeInsight.hint.MethodDeclarationRangeHandler"/>
		<declarationRangeHandler key="com.intellij.java.language.psi.PsiClass"
								 implementationClass="com.intellij.java.impl.codeInsight.hint.ClassDeclarationRangeHandler"/>
		<declarationRangeHandler key="com.intellij.java.language.psi.PsiClassInitializer"
								 implementationClass="com.intellij.java.impl.codeInsight.hint.ClassInitializerDeclarationRangeHandler"/>



		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaCodeContextType$Generic"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaCodeContextType$Statement"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaCodeContextType$Expression"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaCodeContextType$Declaration"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaCommentContextType"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.JavaStringContextType"/>
		<liveTemplateContext implementation="com.intellij.java.impl.codeInsight.template.SmartCompletionContextType"/>
		<statistics.usagesCollector implementation="com.intellij.java.impl.openapi.roots.impl.LanguageLevelUsagesCollector"/>

		<highlightUsagesHandlerFactory implementation="com.intellij.java.impl.codeInsight.highlighting.HighlightExceptionsHandlerFactory"/>
		<highlightUsagesHandlerFactory implementation="com.intellij.java.impl.codeInsight.highlighting.HighlightSuppressedWarningsFactory"/>
		<highlightUsagesHandlerFactory implementation="com.intellij.java.impl.codeInsight.highlighting.HighlightExitPointsHandlerFactory"/>
		<highlightUsagesHandlerFactory implementation="com.intellij.java.impl.codeInsight.highlighting.HighlightOverridingMethodsHandlerFactory"/>


		<patternDialectProvider implementation="com.intellij.java.impl.packageDependencies.ui.PackagePatternProvider" id="package" order="before file"/>

		<patterns.patternClass className="com.intellij.java.language.patterns.PsiJavaPatterns" alias="java"/>








		<!--TODO [VISTALL] core depend - we can't override services
		<applicationService serviceInterface="com.intellij.packageDependencies.DependenciesVisitorFactory"
							 serviceImplementation="com.intellij.packageDependencies.JavaDependenciesVisitorFactory"/> -->

		<internalFileTemplate name="Java Class"/>
		<internalFileTemplate name="Java Interface"/>
		<internalFileTemplate name="Java Enum"/>
		<internalFileTemplate name="Java Record"/>
		<internalFileTemplate name="Java AnnotationType" subject="@interface"/>
		<internalFileTemplate name="package-info"/>
		<internalFileTemplate name="module-info"/>


		<refactoring.copyHandler implementation="com.intellij.java.impl.refactoring.copy.CopyClassesHandler" order="before copyJavaFilesOrPackages"/>
		<refactoring.copyHandler implementation="consulo.language.editor.refactoring.copy.CopyFilesOrDirectoriesHandler" id="copyJavaFilesOrPackages"/>

		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.JavaMoveClassesOrPackagesHandler"
								 order="before moveJavaFileOrDir"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveFilesOrDirectories.JavaMoveFilesOrDirectoriesHandler"
								 id="moveJavaFileOrDir"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveMembers.MoveMembersHandler"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveInstanceMethod.MoveInstanceMethodHandlerDelegate"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveInner.MoveInnerToUpperHandler"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.move.moveInner.MoveInnerToUpperOrMembersHandler"/>
		<refactoring.moveHandler implementation="com.intellij.java.impl.refactoring.anonymousToInner.MoveAnonymousToInnerHandler"/>

		<refactoring.moveDirectoryWithClassesHelper
				implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.JavaMoveDirectoryWithClassesHelper"/>

		<moveFileHandler implementation="com.intellij.java.impl.refactoring.move.moveClassesOrPackages.MoveJavaFileHandler" id="java"/>

		<refactoring.safeDeleteProcessor implementation="com.intellij.java.impl.refactoring.safeDelete.JavaSafeDeleteProcessor" id="javaProcessor"/>
		<refactoring.changeSignatureUsageProcessor implementation="com.intellij.java.impl.refactoring.changeSignature.JavaChangeSignatureUsageProcessor"
												   id="javaProcessor"/>




		<macro implementation="com.intellij.java.impl.ide.macro.ClasspathEntryMacro"/>
		<macro implementation="com.intellij.java.impl.ide.macro.ClasspathMacro"/>
		<macro implementation="com.intellij.java.impl.ide.macro.FileClassMacro"/>
		<macro implementation="com.intellij.java.impl.ide.macro.FileFQPackage"/>
		<macro implementation="com.intellij.java.impl.ide.macro.FilePackageMacro"/>
		<macro implementation="com.intellij.java.impl.ide.macro.JavaDocPathMacro"/>

		<printOption implementation="com.intellij.java.impl.codeEditor.printing.HyperlinksToClassesOption"/>


		<findUsagesHandlerFactory implementation="com.intellij.java.impl.find.findUsages.JavaFindUsagesHandlerFactory" id="java"
								  order="last, before default"/>
		<referenceProviderType key="Class Reference Provider"
							   implementationClass="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.providers.JavaClassReferenceProvider"/>

		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenamePsiPackageProcessor"/>
		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenamePsiDirectoryProcessor"/>
		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenameJavaClassProcessor"/>
		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenameJavaMethodProcessor" id="javamethod"/>
		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenameJavaVariableProcessor" id="javaVariable"/>
		<renameInputValidator implementation="com.intellij.java.impl.refactoring.rename.PsiPackageRenameValidator"/>
		<renamePsiElementProcessor implementation="com.intellij.java.impl.refactoring.rename.RenameAliasingPomTargetProcessor"/>

		<automaticRenamerFactory implementation="com.intellij.java.impl.refactoring.rename.naming.AutomaticVariableRenamerFactory"/>
		<automaticRenamerFactory implementation="com.intellij.java.impl.refactoring.rename.naming.AutomaticParametersRenamerFactory"/>
		<automaticRenamerFactory implementation="com.intellij.java.impl.refactoring.rename.naming.AutomaticInheritorRenamerFactory"/>
		<automaticRenamerFactory implementation="com.intellij.java.impl.refactoring.rename.naming.AutomaticTestRenamerFactory"/>
		<automaticRenamerFactory implementation="com.intellij.java.impl.refactoring.rename.naming.ConstructorParameterOnFieldRenameRenamerFactory"/>





		<usageContextPanelProvider implementation="com.intellij.java.impl.usageView.UsageContextDataflowToPanel$Provider"/>
		<usageContextPanelProvider implementation="com.intellij.java.impl.usageView.UsageContextDataflowFromPanel$Provider"/>





		<callHierarchyProvider language="JAVA" implementationClass="com.intellij.java.impl.ide.hierarchy.call.JavaCallHierarchyProvider"/>
		<methodHierarchyProvider language="JAVA" implementationClass="com.intellij.java.impl.ide.hierarchy.method.JavaMethodHierarchyProvider"/>
		<typeHierarchyProvider language="JAVA" implementationClass="com.intellij.java.impl.ide.hierarchy.type.JavaTypeHierarchyProvider"/>



		<extendWordSelectionHandler implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.JavaWordSelectioner"/>
		<basicWordSelectionFilter implementation="com.intellij.java.impl.codeInsight.editorActions.wordSelection.JavaBasicWordSelectionFilter"/>






		<programRunner id="defaultDebugRunner" implementation="com.intellij.java.debugger.impl.GenericDebuggerRunner" order="last"/>



		<psi.referenceContributor language="JAVA"
								  implementation="com.intellij.java.impl.psi.impl.source.resolve.reference.impl.JavaReflectionReferenceContributor"/>





		<projectService serviceInterface="com.intellij.java.execution.impl.testDiscovery.JavaAutoRunManager"
						serviceImplementation="com.intellij.java.execution.impl.testDiscovery.JavaAutoRunManager"/>

		<applicationService serviceInterface="com.intellij.java.impl.openapi.roots.libraries.LibrariesHelper"
							serviceImplementation="com.intellij.java.impl.openapi.roots.libraries.LibrariesHelperImpl"/>


		<!--Java SPI-->
		<codeInsight.gotoSuper language="JAVA-SPI" implementationClass="com.intellij.java.impl.spi.SPIGotoSuperHandler"/>
		<annotator language="JAVA-SPI" implementationClass="com.intellij.java.impl.spi.SPIAnnotator"/>
		<lang.substitutor language="TEXT" implementationClass="consulo.java.impl.spi.SPILanguageSubstitutor"/>

		<packaging.elementType implementation="com.intellij.java.compiler.artifact.impl.elements.JarArchiveElementType" order="after zip-archive-element"/>

		<orderRootTypeEditor key="javaExternalAnnotations"
							 implementationClass="com.intellij.java.impl.openapi.roots.ui.configuration.libraryEditor.AnnotationsOrderRootTypeUIFactory"/>
		<pathMacroExpendableProtocol protocol="jar"/>





		<xdebugger.lineBreakpointTypeResolver filetype="CLASS" implementationClass="consulo.java.debugger.impl.JavaLineBreakpointTypeResolver"/>
		<xdebugger.lineBreakpointTypeResolver filetype="JAVA" implementationClass="consulo.java.debugger.impl.JavaLineBreakpointTypeResolver"/>

		<projectService serviceInterface="com.intellij.java.impl.openapi.roots.JavaProjectModelModificationService"
						serviceImplementation="com.intellij.java.impl.openapi.roots.impl.JavaProjectModelModificationServiceImpl"/>

		<orderRootTypeEditor key="javaNative"
							 implementationClass="com.intellij.java.impl.openapi.roots.ui.configuration.libraryEditor.NativeLibraryOrderRootTypeUIFactory"/>


		<applicationService serviceInterface="com.intellij.java.language.impl.codeInsight.generation.OverrideImplementExploreUtil$MemberImplementorExplorersProvider"
							serviceImplementation="com.intellij.java.impl.codeInsight.generation.MemberImplementorExplorersProviderImpl"/>

		<applicationService serviceImplementation="com.intellij.java.impl.util.xml.impl.JavaDomApplicationComponent" lazy="false"/>
		<applicationService serviceImplementation="consulo.java.language.impl.JavaDummyHolderComponent" lazy="false"/>

		<projectService serviceImplementation="com.intellij.java.debugger.impl.ui.DebuggerPanelsManager" lazy="false"/>
		<projectService serviceImplementation="com.intellij.java.execution.impl.testDiscovery.TestDiscoveryIndex" lazy="false"/>
		<projectService serviceInterface="com.intellij.java.impl.pom.java.PomJavaAspect" serviceImplementation="com.intellij.java.impl.pom.java.impl.PomJavaAspectImpl" lazy="false"/>


	</extensions>

	<extensions defaultExtensionNs="com.intellij.copyright">
		<!--<updater filetype="JSPX" implementationClass="com.maddyhome.idea.copyright.psi.UpdateJspxFileCopyright$UpdateJspxCopyrightsProvider"/>
		<updater filetype="JSP" implementationClass="com.maddyhome.idea.copyright.psi.UpdateJspFileCopyright$UpdateJspCopyrightsProvider"/> -->
		<updater filetype="JAVA" implementationClass="com.intellij.java.impl.copyright.psi.UpdateJavaFileCopyright$UpdateJavaCopyrightsProvider"/>
	</extensions>

	<extensions defaultExtensionNs="com.intellij.xml.dom">
		<uiControlsProvider implementation="com.intellij.java.impl.util.xml.impl.JavaDomApplicationComponent"/>

	</extensions>
</consulo-plugin>